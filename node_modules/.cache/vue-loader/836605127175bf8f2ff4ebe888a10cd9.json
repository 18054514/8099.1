{"remainingRequest":"D:\\thousandProject\\Mxgraph-EasyFlowEditor\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\thousandProject\\Mxgraph-EasyFlowEditor\\src\\views\\customToolbar\\component\\uploadData.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\thousandProject\\Mxgraph-EasyFlowEditor\\src\\views\\customToolbar\\component\\uploadData.vue","mtime":1691244427717},{"path":"D:\\thousandProject\\Mxgraph-EasyFlowEditor\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\thousandProject\\Mxgraph-EasyFlowEditor\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\thousandProject\\Mxgraph-EasyFlowEditor\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\thousandProject\\Mxgraph-EasyFlowEditor\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\thousandProject\\Mxgraph-EasyFlowEditor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\thousandProject\\Mxgraph-EasyFlowEditor\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnVwbG9hZC1ib3ggew0KICAuZWwtdXBsb2FkIHsNCiAgICBkaXNwbGF5OiBibG9jazsNCiAgICB3aWR0aDogMzYwcHg7DQogICAgbWFyZ2luOiAwIGF1dG87DQogIH0NCn0NCi5jb2RlbWlycm9yIHsNCiAgbWFyZ2luLXRvcDogNDBweDsNCiAgYm9yZGVyLXN0eWxlOiBzb2xpZDsNCiAgYm9yZGVyLWNvbG9yOiAjNTc4ZGJmOw0KICBib3JkZXItd2lkdGg6IDJweCAycHggMnB4IDA7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgaGVpZ2h0OiA1MDBweDsNCn0NCi5Db2RlTWlycm9yIHsNCiAgaGVpZ2h0OiAxMDAlOw0KfQ0KLmNvZGVtaXJyb3I6OmJlZm9yZSB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgZm9udC1zaXplOiAxN3B4Ow0KICB0b3A6IC0zMHB4Ow0KICBsZWZ0OiAxMHB4Ow0KICBjb250ZW50OiAi5pWw5o2u6aKE6KeIIDoiOw0KfQ0KLnhtbFRvSnNvbiB7DQogIHdpZHRoOiA1MCU7DQogIGhlaWdodDogMTAwJTsNCn0NCi54bWxUb0pzb246OmJlZm9yZSB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgZm9udC1zaXplOiAxN3B4Ow0KICB0b3A6IDBweDsNCiAgbGVmdDogMTBweDsNCiAgY29udGVudDogIlhNTOi9rEpTT04gOiI7DQp9DQo="},{"version":3,"sources":["uploadData.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"uploadData.vue","sourceRoot":"src/views/customToolbar/component","sourcesContent":["<template>\r\n  <el-dialog\r\n    :title=\"isOutputXml ? '数据导出' : '数据导入'\"\r\n    :visible.sync=\"centerDialogVisible\"\r\n    width=\"70%;\"\r\n    center\r\n    @close=\"close\"\r\n  >\r\n    <el-upload\r\n      class=\"upload-box\"\r\n      drag\r\n      accept=\".xml\"\r\n      action\r\n      :file-list=\"uploadFiles\"\r\n      :on-change=\"fileChange\"\r\n      :auto-upload=\"false\"\r\n      :limit=\"1\"\r\n      :on-exceed=\"exceedFile\"\r\n      v-if=\"!isOutputXml\"\r\n    >\r\n      <i class=\"el-icon-upload\"></i>\r\n      <div class=\"el-upload__text\">\r\n        将文件拖到此处，或\r\n        <em>点击上传</em>\r\n        <div slot=\"tip\" class=\"el-upload__tip\">\r\n          只能上传\r\n          <em>xml</em> 文件，且最大文件数量不超过 <em>1</em> 个\r\n        </div>\r\n      </div>\r\n    </el-upload>\r\n    <!--codemirror插件-->\r\n    <div style=\"display: flex\">\r\n      <codemirror\r\n        :value=\"currentNodeData\"\r\n        v-model=\"currentNodeData\"\r\n        :options=\"options\"\r\n        :style=\"{ width: isOutputXml ? '50%' : '100%' }\"\r\n        class=\"codemirror\"\r\n      ></codemirror>\r\n      <!-- xml转json -->\r\n      <json-viewer\r\n        v-if=\"isOutputXml\"\r\n        class=\"xmlToJson\"\r\n        :value=\"xml2json\"\r\n        :expand-depth=\"5\"\r\n        copyable\r\n        sort\r\n      ></json-viewer>\r\n    </div>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"cancelUpload\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"confirmUpload\" v-if=\"!isOutputXml\"\r\n        >导入</el-button\r\n      >\r\n      <el-button type=\"primary\" @click=\"saveXmlFile\" v-if=\"isOutputXml\"\r\n        >另存为XML文件</el-button\r\n      >\r\n    </span>\r\n  </el-dialog>\r\n</template>\r\n<script>\r\nimport 'codemirror/lib/codemirror.css'\r\nimport { codemirror } from 'vue-codemirror'\r\n// 导入主题 样式\r\n// import 'codemirror/theme/mdn-like.css'\r\nimport 'codemirror/theme/lesser-dark.css'\r\nimport 'codemirror/mode/markdown/markdown.js'\r\n// 导入数据类型识别文件\r\nimport \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/mode/properties/properties.js\"\r\nimport 'codemirror/addon/scroll/annotatescrollbar.js'\r\nimport 'codemirror/addon/search/matchesonscrollbar.js'\r\nimport 'codemirror/addon/search/match-highlighter.js'\r\nimport 'codemirror/addon/search/jump-to-line.js'\r\nimport 'codemirror/addon/selection/active-line' //光标行背景高亮，配置里面也需要styleActiveLine设置为true\r\n\r\nimport 'codemirror/addon/dialog/dialog.js'\r\nimport 'codemirror/addon/dialog/dialog.css'\r\nimport 'codemirror/addon/search/searchcursor.js'\r\nimport 'codemirror/addon/search/search.js'\r\n// 折叠\r\nimport 'codemirror/addon/fold/foldgutter.css'\r\nimport 'codemirror/addon/fold/foldcode'\r\nimport 'codemirror/addon/fold/foldgutter'\r\nimport 'codemirror/addon/fold/brace-fold'\r\nimport 'codemirror/addon/fold/comment-fold'\r\nimport X2JS from 'x2js'\r\n\r\nexport default {\r\n  props: ['graphXml', 'isOutputXml'],\r\n  data () {\r\n    return {\r\n      xml2json: '',\r\n      uploadFiles: [],\r\n      centerDialogVisible: false,\r\n      currentNodeData: \"\",\r\n      // codemirror配置项\r\n      options: {\r\n        tabSize: 4,\r\n        lineNumbers: true,\r\n        line: true,\r\n        mode: 'text/x-markdown',\r\n        theme: 'lesser-dark',\r\n        foldGutter: true,\r\n        lineWrapping: true,\r\n        styleActiveLine: true,\r\n        autoRefresh: true,\r\n        lint: true,\r\n        gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    codemirror\r\n  },\r\n  watch: {\r\n    currentNodeData: {\r\n      handler (newvalue) {\r\n        // let xmljson = x2js.xml2js(newvalue) //xml2js方法，传入xml格式的数据，返回json对象\r\n        //创建一个x2js对象进行转换\r\n        var x2js = new X2JS();\r\n        this.xml2json = x2js.xml2js(newvalue);\r\n        // this.currentNodeData = newvalue\r\n      },\r\n      immediate: true,\r\n      deep: true\r\n    }\r\n  },\r\n  mounted () {\r\n    this.centerDialogVisible = true\r\n    this.currentNodeData = this.graphXml\r\n  },\r\n  methods: {\r\n\r\n    close () {\r\n      this.centerDialogVisible = false\r\n      this.$parent.uploadDataVisible = false;\r\n    },\r\n    saveXmlFile () {\r\n      var datastr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(this.currentNodeData);\r\n      var downloadAnchorNode = document.createElement('a')\r\n      downloadAnchorNode.setAttribute(\"href\", datastr);\r\n      downloadAnchorNode.setAttribute(\"download\", 'data.xml')\r\n      downloadAnchorNode.click();\r\n      downloadAnchorNode.remove();\r\n      this.$message.success(\"正在下载中,请稍后...\")\r\n    },\r\n    confirmUpload () {\r\n      // 触发父组件重绘函数\r\n      this.$emit(\"uploadPaintFlow\", this.currentNodeData)\r\n      this.centerDialogVisible = false\r\n      this.$parent.uploadDataVisible = false;\r\n    },\r\n    cancelUpload () {\r\n      console.log(this.currentNodeData)\r\n      this.centerDialogVisible = false\r\n      this.$parent.uploadDataVisible = false;\r\n      this.currentNodeData = \"\"\r\n    },\r\n\r\n    tirggerFile () {\r\n\r\n    },\r\n    fileChange (file) {\r\n      // 获取文件类型\r\n      var fileType = file.name.split(\".\").pop()\r\n      if (fileType !== 'xml') {\r\n        this.$message.error(\"上传文件类型错误,请重新上传XML类型的文件\")\r\n        this.uploadFiles = []\r\n        return\r\n      }\r\n      if (file) {\r\n        let reader = new FileReader()\r\n        reader.readAsText(file.raw) //注意读取中文的是用这个编码，不是utf-8\r\n        reader.onload = () => {\r\n          this.$message.success(\"文件上传成功\")\r\n          var result = reader.result;\r\n          this.currentNodeData = result\r\n        }\r\n      }\r\n    },\r\n    exceedFile () {\r\n      this.$message.error(\"超出文件可上传数量,请先清除文件\")\r\n    }\r\n  },\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n.upload-box {\r\n  .el-upload {\r\n    display: block;\r\n    width: 360px;\r\n    margin: 0 auto;\r\n  }\r\n}\r\n.codemirror {\r\n  margin-top: 40px;\r\n  border-style: solid;\r\n  border-color: #578dbf;\r\n  border-width: 2px 2px 2px 0;\r\n  position: relative;\r\n  height: 500px;\r\n}\r\n.CodeMirror {\r\n  height: 100%;\r\n}\r\n.codemirror::before {\r\n  position: absolute;\r\n  font-size: 17px;\r\n  top: -30px;\r\n  left: 10px;\r\n  content: \"数据预览 :\";\r\n}\r\n.xmlToJson {\r\n  width: 50%;\r\n  height: 100%;\r\n}\r\n.xmlToJson::before {\r\n  position: absolute;\r\n  font-size: 17px;\r\n  top: 0px;\r\n  left: 10px;\r\n  content: \"XML转JSON :\";\r\n}\r\n</style>"]}]}