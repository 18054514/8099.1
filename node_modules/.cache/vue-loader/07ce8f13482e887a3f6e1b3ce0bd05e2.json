{"remainingRequest":"D:\\thousandProject\\editor\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\thousandProject\\editor\\src\\views\\customToolbar\\customToolbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\thousandProject\\editor\\src\\views\\customToolbar\\customToolbar.vue","mtime":1691476228089},{"path":"D:\\thousandProject\\editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\thousandProject\\editor\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\thousandProject\\editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\thousandProject\\editor\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["customToolbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"customToolbar.vue","sourceRoot":"src/views/customToolbar","sourcesContent":["<template>\r\n  <div class=\"customToolbarContainer\">\r\n    <!-- 左侧节点/放大缩小工具 菜单 -->\r\n    <div class=\"toolbarContainer\">\r\n      <div class=\"aside-button-group\">\r\n        <el-button-group style=\"margin: 10px 0\">\r\n          <el-tooltip\r\n            class=\"item\"\r\n            effect=\"dark\"\r\n            content=\"放大\"\r\n            placement=\"bottom\"\r\n          >\r\n            <el-button icon=\"el-icon-zoom-in\" @click=\"zoomIn\"></el-button>\r\n          </el-tooltip>\r\n          <el-tooltip\r\n            class=\"item\"\r\n            effect=\"dark\"\r\n            content=\"缩小\"\r\n            placement=\"bottom\"\r\n          >\r\n            <el-button icon=\"el-icon-zoom-out\" @click=\"zoomOut\"></el-button>\r\n          </el-tooltip>\r\n          <el-tooltip\r\n            class=\"item\"\r\n            effect=\"dark\"\r\n            content=\"等比缩放\"\r\n            placement=\"bottom\"\r\n          >\r\n            <el-button\r\n              @click=\"autoSize\"\r\n              icon=\"iconfont icon-expandalt-fill\"\r\n            ></el-button>\r\n          </el-tooltip>\r\n        </el-button-group>\r\n      </div>\r\n      <!-- 节点样板菜单 -->\r\n      <el-collapse v-model=\"activeNames\">\r\n        <el-collapse-item name=\"1\" class=\"general-toolbar\">\r\n          <!-- 基础节点图标 -->\r\n          <template slot=\"title\" class=\"collaspetitle\">Base node</template>\r\n          <span\r\n            v-for=\"item in generalToolbarItems\"\r\n            :style=\"item['style']\"\r\n            :class=\"item['class']\"\r\n            :key=\"item['index']\"\r\n            ref=\"generalToolItems\"\r\n          >\r\n            <span class=\"generalTooltitle\">{{ item[\"text\"] }}</span>\r\n          </span>\r\n        </el-collapse-item>\r\n<!--        <el-collapse-item name=\"2\" class=\"custom-toolbar\">-->\r\n<!--          &lt;!&ndash; 自定义图标 &ndash;&gt;-->\r\n<!--          <template slot=\"title\" class=\"collaspetitle\">自定义节点</template>-->\r\n<!--          <span-->\r\n<!--            v-for=\"item in toolbarItems\"-->\r\n<!--            style-->\r\n<!--            :class=\"{ 'rectangle-node': item['nodeType'] === 'rectangle' }\"-->\r\n<!--            class=\"custom-node\"-->\r\n<!--            :key=\"item['title']\"-->\r\n<!--            ref=\"toolItem\"-->\r\n<!--          >-->\r\n<!--            <img style :src=\"item['icon']\" />-->\r\n<!--            <br />-->\r\n<!--            <span class=\"node-title\">{{ item[\"title\"] }}</span>-->\r\n<!--          </span>-->\r\n<!--        </el-collapse-item>-->\r\n        <!-- 箭头模板图标 -->\r\n        <el-collapse-item\r\n          v-for=\"(palette, paletteIndex) in Object.values(palettes)\"\r\n          :title=\"palette['title']\"\r\n          :key=\"paletteIndex\"\r\n          name=\"3\"\r\n          class=\"shapgroud\"\r\n        >\r\n          <!-- 图标 -->\r\n          <a\r\n            v-for=\"(_, shapeIndex) in palette['shapes']\"\r\n            :shapeIndex=\"shapeIndex\"\r\n            :paletteIndex=\"paletteIndex\"\r\n            ref=\"stencilDragItem\"\r\n            class=\"stencil-node\"\r\n            :key=\"shapeIndex\"\r\n          ></a>\r\n        </el-collapse-item>\r\n        <!--分组图标 -->\r\n<!--        <el-collapse-item title=\"组元素\" name=\"4\">-->\r\n<!--          <ul>-->\r\n<!--            <li-->\r\n<!--              v-for=\"(item, index) in grouptoolItems\"-->\r\n<!--              :key=\"index\"-->\r\n<!--              class=\"group-item\"-->\r\n<!--              ref=\"grouptoolItem\"-->\r\n<!--            >-->\r\n<!--              <b>{{ item.title }}</b>-->\r\n<!--            </li>-->\r\n<!--          </ul>-->\r\n<!--        </el-collapse-item>-->\r\n      </el-collapse>\r\n    </div>\r\n    <!-- 画布的顶部工具栏 -->\r\n    <div class=\"top-tools\">\r\n      <el-col :span=\"4\">\r\n        <div\r\n          class=\"grid-content bg-purple\"\r\n          style=\"\r\n            color: rgb(64, 158, 255);\r\n            font-weight: 800;\r\n            font-size: 22px;\r\n            margin-left: 44px;\r\n          \"\r\n        >\r\n          Easy Editor\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"12\" class=\"tools-group\">\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"组合\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            icon=\"iconfont icon-zuhe\"-->\r\n<!--            @click=\"enGroup\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"导入xml文件\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            icon=\"iconfont icon-fileplus-fill\"-->\r\n<!--            @click=\"inPutXml\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"导出xml文件\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            icon=\"iconfont icon-xmloutput\"-->\r\n<!--            @click=\"outPutXml\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          v-if=\"showBackground\"\r\n          content=\"Hidden grid background\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            type=\"text\"\r\n            icon=\"iconfont icon-dituleiwanggequ-copy\"\r\n            @click=\"showBackground = false\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n        <el-tooltip\r\n          v-else\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"显示网格背景\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            type=\"text\"\r\n            icon=\"iconfont icon-fangxingweixuanzhong-copy\"\r\n            @click=\"showBackground = true\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"导出为图片\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            icon=\"iconfont icon-tupian\"-->\r\n<!--            @click=\"showImage\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"环形布局\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            @click=\"graphLayout(true, 'circleLayout')\"-->\r\n<!--            type=\"text\"-->\r\n<!--            icon=\"el-icon-stopwatch\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"树形布局\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            @click=\"graphLayout(true, 'compactTreeLayout')\"-->\r\n<!--            icon=\"iconfont icon-Directory-tree\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"随机布局\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            @click=\"graphLayout(true, 'randomLayout')\"-->\r\n<!--            icon=\"el-icon-c-scale-to-original\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"分层布局\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            @click=\"graphLayout(true, 'hierarchicalLayout')\"-->\r\n<!--            icon=\"el-icon-files\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"cancel\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            type=\"text\"\r\n            icon=\"iconfont icon-reply\"\r\n            @click=\"goBack\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"advance\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            type=\"text\"\r\n            icon=\"iconfont icon-share\"\r\n            @click=\"goForward\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"delete\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            type=\"text\"\r\n            icon=\"el-icon-delete-solid\"\r\n            @click=\"deleteNode\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n      </el-col>\r\n<!--      <el-col :span=\"8\">-->\r\n<!--        <div-->\r\n<!--          class=\"grid-content bg-purple\"-->\r\n<!--          style=\"display: flex; justify-content: flex-end; padding-right: 20px\"-->\r\n<!--        >-->\r\n<!--          <el-button round size=\"medium\" @click=\"loadFlowCase(1)\"-->\r\n<!--            >化工流程案例</el-button-->\r\n<!--          >-->\r\n<!--          <el-button round size=\"medium\" @click=\"loadFlowCase(2)\"-->\r\n<!--            >组件管理案例</el-button-->\r\n<!--          >-->\r\n<!--          <el-button round size=\"medium\" @click=\"loadFlowCase(3)\"-->\r\n<!--            >Vue生命周期案例</el-button-->\r\n<!--          >-->\r\n<!--        </div>-->\r\n<!--      </el-col>-->\r\n    </div>\r\n    <!-- 中心画布 -->\r\n    <div\r\n      class=\"graphContainer\"\r\n      id=\"graphContainer\"\r\n      ref=\"container\"\r\n      :class=\"{ 'graphContainer-background': showBackground }\"\r\n    ></div>\r\n    <!-- 右侧栏 -->\r\n    <div class=\"right-bar\">\r\n      <!-- 样式设置 -->\r\n      <style-select\r\n        @changeDashed=\"changeDashed\"\r\n        @changeStrokeColor=\"changeStrokeColor\"\r\n        @changeStrokeWidth=\"changeStrokeWidth\"\r\n        @changeFontSize=\"changeFontSize\"\r\n        @changeFontColor=\"changeFontColor\"\r\n        @changeLabelBackgroundColor=\"changeLabelBackgroundColor\"\r\n        @changeConfigOrder=\"changeConfigOrder\"\r\n        @changeFillColor=\"changeFillColor\"\r\n        @changeShadow=\"changeShadow\"\r\n        @changeFontStyle=\"changeFontStyle\"\r\n        @changeNodeimage=\"changeNodeimage\"\r\n        @edgeChange=\"edgeChange\"\r\n        @textValueChange=\"textValueChange\"\r\n        :textValue=\"textValue\"\r\n        :isNode=\"isNode\"\r\n        :cellStyle=\"cellStyle\"\r\n        :currentNormalType=\"currentNormalType\"\r\n        :graphX=\"graphX\"\r\n        :graphY=\"graphY\"\r\n        ref=\"styleSelect\"\r\n      />\r\n<!--      <div class=\"json-viewer\">-->\r\n<!--        <h4 style=\"text-align: center\">Json数据结构</h4>-->\r\n<!--        <json-viewer-->\r\n<!--          :value=\"jsonData\"-->\r\n<!--          style=\"height: 80%\"-->\r\n<!--          copyable-->\r\n<!--          sort-->\r\n<!--        ></json-viewer>-->\r\n<!--      </div>-->\r\n    </div>\r\n\r\n    <!-- XML数据导入/导出 -->\r\n<!--    <upload-data-->\r\n<!--      v-if=\"uploadDataVisible\"-->\r\n<!--      @uploadPaintFlow=\"uploadPaintFlow\"-->\r\n<!--      :graphXml=\"graphXml\"-->\r\n<!--      :isOutputXml=\"isOutputXml\"-->\r\n<!--    ></upload-data>-->\r\n  </div>\r\n</template>\r\n<script>\r\n// 导入自定义图标数组\r\nimport { generalToolbarItems } from \"./general-shape\"\r\nimport { toolbarItems } from './toolbar'\r\n// 组元素\r\nimport { grouptoolItems } from './GroupToolbarItems'\r\nimport * as R from \"ramda\";\r\nimport mx from 'mxgraph';\r\nimport _ from 'lodash';\r\nconst mxgraph = mx({})\r\nimport styleSelect from \"./component/styleSelect\";\r\nconst {\r\n  mxStencilRegistry,\r\n  mxStencil,\r\n  mxEvent,\r\n  mxGraph,\r\n  mxEditor,\r\n  mxUtils,\r\n  mxRubberband,\r\n  mxKeyHandler,\r\n  mxGraphHandler,\r\n  mxConstants,\r\n  mxImage,\r\n  mxCellState,\r\n  mxConnectionHandler,\r\n  mxCodec,\r\n  mxRectangleShape,\r\n  mxPoint,\r\n  mxClipboard,\r\n  mxCellTracker,\r\n  mxUndoManager,\r\n  mxClient,\r\n  mxEdgeHandler,\r\n  mxPerimeter,\r\n  mxOutline,\r\n  mxEventObject,\r\n  mxGeometry,\r\n  mxCell,\r\n  mxShape,\r\n  mxConstraintHandler,\r\n  mxEllipse,\r\n  // mxTriangle,\r\n  mxFastOrganicLayout,\r\n  mxHierarchicalLayout,\r\n  mxCompactTreeLayout,\r\n  mxMorphing,\r\n  mxCircleLayout,\r\n  mxSvgCanvas2D,\r\n  mxImageExport,\r\n  mxConnectionConstraint,\r\n  mxPolyline,\r\n  mxVertexHandler,\r\n  mxRectangle,\r\n  mxImageShape,\r\n  ActiveXObject,\r\n} = mxgraph;\r\nconst path = require('path');\r\n// 配置自定义事件\r\nObject.assign(mxEvent, {\r\n  NORMAL_TYPE_CLICKED: 'NORMAL_TYPE_CLICKED',\r\n});\r\n// 导入流程图案例数据\r\nconst xmlData1 = path.join('data/data1.xml');\r\nconst xmlData2 = path.join('data/data2.xml');\r\nconst xmlData3 = path.join('data/data3.xml');\r\nexport default {\r\n  computed: {\r\n    // 组元素\r\n    grouptoolItems: () => grouptoolItems,\r\n    toolbarItems: () => toolbarItems,\r\n    generalToolbarItems: () => generalToolbarItems,\r\n  },\r\n  components: {\r\n    styleSelect,\r\n  },\r\n  data () {\r\n    return {\r\n      graph: null,\r\n      editor: null,\r\n      palettes: {},\r\n      graphXml: '',\r\n      activeNames: ['1', '2', '3'],\r\n      isNode: false,\r\n      cellStyle: '',\r\n      graphX: 100,\r\n      graphY: 10,\r\n      undoMng: '',\r\n      textValue: '',\r\n      uploadDataVisible: false,\r\n      isOutputXml: false,\r\n      edgeStyle: 'orthogonalEdgeStyle',\r\n      outline: '',\r\n      idSeed: 0,\r\n      normalIdSeed: 0,\r\n      // configOrder: 0,\r\n      jsonData: {\r\n        cells: {\r\n          nodes: [],\r\n          groups: []\r\n        },\r\n        edges: []\r\n      },\r\n      showBackground: false,\r\n      currentNormalType: {},\r\n      normalTypePosition: {\r\n        top: '0',\r\n        left: '0',\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 创建画布并进行初始化\r\n    createGraph () {\r\n      // 创建graph\r\n      // 方式一：直接构建graph实例\r\n      // this.graph = new mxGraph(this.$refs.container)\r\n      this.editor = new mxEditor();\r\n      this.graph = this.editor.graph;\r\n      this.editor.setGraphContainer(this.$refs.container);\r\n      // 配置默认全局样式\r\n      this.configureStylesheet(this.graph);\r\n      // 去锯齿效果\r\n      mxRectangleShape.prototype.crisp = true;\r\n      // 定义全局变量，如。用于触发建立新的连接的活动区域的最小尺寸（以像素为单位），该部分（100％）的小区区域被用于触发新的连接，以及一些窗口和“下拉菜菜单选择\r\n      mxConstants.MIN_HOTSPOT_SIZE = 16;\r\n      mxConstants.DEFAULT_HOTSPOT = 1;\r\n\r\n      //cell创建支持传入html\r\n      this.graph.setHtmlLabels(true);\r\n      this.graph.setDropEnabled(true);\r\n      this.graph.setSplitEnabled(false);\r\n      // 有效的拖放操作，则返回true\r\n      this.graph.isValidDropTarget = (target, cells, evt) => {\r\n        if (this.graph.isSplitEnabled() && this.graph.isSplitTarget(target, cells, evt)) {\r\n          console.log('拖放');\r\n          return true;\r\n        }\r\n      };\r\n\r\n      // 禁用分组的收缩功能 方法1:\r\n      // this.graph.isCellFoldable = (cell) => {\r\n      //   return false\r\n      // }\r\n      // 禁用分组的收缩功能 方法2:\r\n      this.graph.foldingEnabled = false;\r\n      // 组内的子元素是否随父元素变化而变化\r\n      this.graph.recursiveResize = true;\r\n\r\n      // 设置连线时的预览路径及样式\r\n      this.graph.connectionHandler.createEdgeState = () => {\r\n        // 设置预览的连接线,第三个参数为连接成功后连接线上的label\r\n        var edge = this.graph.createEdge(null, null, null, null, null);\r\n        // edge.style += `;edgeStyle=orthogonalEdgeStyle `\r\n        return new mxCellState(this.graph.view, edge, this.graph.getCellStyle(edge));\r\n      };\r\n\r\n      // 是否开启旋转\r\n      mxVertexHandler.prototype.livePreview = true;\r\n      mxVertexHandler.prototype.rotationEnabled = true;\r\n      // 设置旋转按钮\r\n      mxVertexHandler.prototype.createSizerShape = function (bounds, index, fillColor) {\r\n        if (this.handleImage != null) {\r\n          bounds = new mxRectangle(bounds.x, bounds.y, this.handleImage.width, this.handleImage.height);\r\n          let shape = new mxImageShape(bounds, this.handleImage.src);\r\n          // Allows HTML rendering of the images\r\n          shape.preserveImageAspect = true;\r\n          return shape;\r\n        } else if (index == mxEvent.ROTATION_HANDLE) {\r\n          // return new mxDoubleEllipse(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\r\n          // 设置旋转图标\r\n          bounds = new mxRectangle(bounds.x, bounds.y, 15, 15);\r\n          let rotationShape = new mxImageShape(bounds, 'icon/rotate.svg');\r\n          rotationShape.preserveImageAspect = true;\r\n          return rotationShape;\r\n        } else {\r\n          return new mxRectangleShape(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\r\n        }\r\n      };\r\n      // 设置旋转角度（解决默认旋转180度的bug）\r\n      mxVertexHandler.prototype.getRotationHandlePosition = function () {\r\n        let padding = this.getHandlePadding();\r\n        return new mxPoint(this.bounds.x + this.bounds.width - this.rotationHandleVSpacing + padding.x / 2, this.bounds.y + this.rotationHandleVSpacing - padding.y / 2);\r\n      };\r\n      // 设置默认组\r\n      // groupBorderSize 设置图形和它的子元素的边距\r\n      let group = new mxCell('Group', new mxGeometry(), 'group;fontColor=white;');\r\n      group.setVertex(true);\r\n      // 设置组可连接\r\n      group.setConnectable(true);\r\n      // group.setCellsResizable(false);\r\n      this.editor.defaultGroup = group;\r\n      this.editor.groupBorderSize = 80;\r\n\r\n      // 是否根元素\r\n      this.graph.isValidRoot = function (cell) {\r\n        return this.isValidDropTarget(cell);\r\n      };\r\n\r\n      // // 是否可以被选中\r\n      // this.graph.isCellSelectable = function (cell) {\r\n      //   return !this.isCellLocked(cell);\r\n      // };\r\n\r\n      // 返回元素\r\n      this.graph.getLabel = function (cell) {\r\n        var tmp = mxGraph.prototype.getLabel.apply(this, arguments); // \"supercall\"\r\n        if (this.isCellLocked(cell)) {\r\n          // 如元素被锁定 返回空标签\r\n          return '';\r\n        } else if (this.isCellCollapsed(cell)) {\r\n          var index = tmp.indexOf('</h1>');\r\n          if (index > 0) {\r\n            tmp = tmp.substring(0, index + 5);\r\n          }\r\n        }\r\n        return tmp;\r\n      };\r\n\r\n      // 目标是否有效\r\n      this.graph.isValidDropTarget = function (cell) {\r\n        // console.log(cell, cells, evt);\r\n        return this.isSwimlane(cell);\r\n      };\r\n\r\n      // 是否根元素\r\n      this.graph.isValidRoot = function (cell) {\r\n        return this.isValidDropTarget(cell);\r\n      };\r\n\r\n      // 是否可以被选中\r\n      this.graph.isCellSelectable(true)\r\n\r\n      // 允许重复连接\r\n      this.graph.setMultigraph(true);\r\n      // 禁止连接线晃动(即连线两端必须在节点上)\r\n      this.graph.setAllowDanglingEdges(false);\r\n      // 允许连线的目标和源是同一元素\r\n      this.graph.setAllowLoops(false);\r\n      //边被拖动时始终保持连接\r\n      this.graph.setDisconnectOnMove(false);\r\n      // 选择基本元素开启\r\n      this.graph.setEnabled(true);\r\n      // 动态改变样式\r\n      this.graph.getView().updateStyle = true;\r\n      // 鼠标框选\r\n      this.rubberBand = new mxRubberband(this.graph);\r\n      this.graph.setResizeContainer(true);\r\n\r\n      // 开启画布平滑移动\r\n      // this.graph.setPanning(true);\r\n      this.graph.setPanning = true;\r\n      // 开启提示\r\n      this.graph.setTooltips(false);\r\n      // 允许连线\r\n      this.graph.setConnectable(true);\r\n      //移动元素的步长\r\n      this.graph.gridSize = 3;\r\n      this.graph.setBorder(160);\r\n\r\n      // 开启方块上的文字编辑功能\r\n      this.graph.setCellsEditable(true);\r\n      // 禁止双击修改内容(弃用)\r\n      // this.graph.dblClick = (evt, cell) => {\r\n      //   var model = this.graph.getModel();\r\n      //   if (model.isVertex(cell)) {\r\n      //     return false;\r\n      //   }\r\n      // };\r\n      // Disables synchronous loading of resources\r\n      // 可用于禁用HTML的泳道标签，避免冲突(返回false即可)\r\n      // 判断是否为泳道标签\r\n      // this.graph.isHtmlLabel = function (cell) {\r\n      //   return this.isSwimlane(cell);\r\n      // };\r\n      //准备撤销还原功能\r\n      // 构造具有给定历史记录大小的新撤消管理器。默认100步\r\n      this.undoMng = new mxUndoManager();\r\n      let listener = (sender, evt) => {\r\n        this.undoMng.undoableEditHappened(evt.getProperty('edit'));\r\n\r\n      };\r\n      this.graph.getModel().addListener(mxEvent.UNDO, listener);\r\n      this.graph.getView().addListener(mxEvent.UNDO, listener);\r\n      // 创建缩略图\r\n      this.outline = new mxOutline(this.graph, this.$refs.styleSelect.$refs.showMap);\r\n      if ((this.graph) == null || (this.graph) == undefined) {\r\n        return;\r\n      }\r\n      // 从value中获取显示的内容(如果节点的value为空则显示节点的title)\r\n      this.graph.convertValueToString = (cell) => {\r\n        return cell['value'] ? cell['value'] : cell['title'];\r\n      };\r\n    },\r\n\r\n    // 新增自定义节点\r\n    addCustomCell (dropCell, toolItem, x, y) {\r\n      // 判断是否是放在组元素上\r\n      const drop = !R.isNil(dropCell);\r\n      // drop && this.$message.info(`${toolItem['title']}节点进入${dropCell.title}`);\r\n      const { width, height } = toolItem;\r\n      const styleObj = toolItem.style;\r\n      const style = Object.keys(styleObj).map((attr) => `${attr}=${styleObj[attr]}`).join(';');\r\n      const realX = drop ? x - dropCell.geometry.x : x;\r\n      const realY = drop ? y - dropCell.geometry.y : y;\r\n      const parent = drop ? dropCell : this.graph.getDefaultParent();\r\n      this.graph.getModel().beginUpdate();\r\n      try {\r\n        let vertex = this.graph.insertVertex(parent, null, null, realX - (width / 2), realY - (height / 2), width, height, style + ';whiteSpace=wrap;word-break=break-all');\r\n        vertex.title = toolItem['title'];\r\n        vertex.id = toolItem['id'] + '-' + toolItem['idSeed'];\r\n        // 添加完节点后自动添加顺序图标\r\n        this.addPoint(vertex, toolItem['idSeed']);\r\n        toolItem['idSeed']++;\r\n        vertex['isGroup'] = toolItem['id'].includes('group') ? true : false\r\n      } finally {\r\n        this.graph.getModel().endUpdate();\r\n      }\r\n    },\r\n    // 布局\r\n    graphLayout (animate, layoutType) {\r\n      this.graph.getModel().beginUpdate()\r\n      try {\r\n        if (layoutType === 'randomLayout') {\r\n          // 随机布局\r\n          mxFastOrganicLayout.prototype.minDistanceLimit = 100\r\n          // eslint-disable-next-line new-cap\r\n          var layout = new mxFastOrganicLayout(this.graph)\r\n          layout.forceConstant = 500\r\n          layout.execute(this.graph.getDefaultParent())\r\n        } else if (layoutType === 'hierarchicalLayout') {\r\n          // 分层布局\r\n          mxHierarchicalLayout.prototype.intraCellSpacing = 300\r\n          mxHierarchicalLayout.prototype.fineTuning = false\r\n          mxHierarchicalLayout.prototype.traverseAncestors = false\r\n          mxHierarchicalLayout.prototype.resizeParent = true\r\n          // 无关系实体之间的间距\r\n          mxHierarchicalLayout.prototype.interHierarchySpacing = 200\r\n          // 层级之间的距离\r\n          mxHierarchicalLayout.prototype.interRankCellSpacing = 800\r\n\r\n          // eslint-disable-next-line new-cap\r\n          var hierarchicallayout = new mxHierarchicalLayout(this.graph, mxConstants.DIRECTION_NORTH)\r\n          hierarchicallayout.execute(this.graph.getDefaultParent())\r\n        } else if (layoutType === 'compactTreeLayout') {\r\n          // 树形布局\r\n          // eslint-disable-next-line new-cap\r\n          var compactTreelayout = new mxCompactTreeLayout(this.graph)\r\n          compactTreelayout.execute(this.graph.getDefaultParent())\r\n        } else if (layoutType === 'circleLayout') {\r\n          // 圆形布局\r\n          // eslint-disable-next-line new-cap\r\n          var circleLayout = new mxCircleLayout(this.graph, 400)\r\n          circleLayout.execute(this.graph.getDefaultParent())\r\n        }\r\n      } finally {\r\n        // 是否开启布局动画\r\n        if (animate) {\r\n          // eslint-disable-next-line new-cap\r\n          var morph = new mxMorphing(this.graph, 20, 7.7, 40)\r\n          morph.addListener(mxEvent.DONE, () => {\r\n            this.graph.getModel().endUpdate()\r\n          })\r\n          morph.startAnimation()\r\n        } else {\r\n          this.graph.getModel().endUpdate()\r\n        }\r\n      }\r\n    },\r\n    // 初始化基础节点\r\n    initGeneralTool () {\r\n      var generalToolbarDomArray = this.$refs.generalToolItems;\r\n      // 判断是否为数组且数组是否为空\r\n      if (!(generalToolbarDomArray instanceof Array || generalToolbarDomArray.length <= 0)) {\r\n        return;\r\n      }\r\n      generalToolbarDomArray.forEach((dom, domIndex) => {\r\n        var toolItem = this.generalToolbarItems[domIndex];\r\n        var { width, height } = toolItem;\r\n        var itemClass = (toolItem.class);\r\n        //新增基础节点\r\n        var generalDropHandler = (graph, evt, dropCell, x, y) => {\r\n          const drop = !R.isNil(dropCell);\r\n          // drop && this.$message.info(`${toolItem['title']}节点进入${dropCell.title}`);\r\n          const realX = drop ? x - dropCell.geometry.x : x;\r\n          const realY = drop ? y - dropCell.geometry.y : y;\r\n          const { width, height } = toolItem;\r\n          const styleObj = toolItem.style;\r\n          const style = Object.keys(styleObj).map((attr) => `${attr}=${styleObj[attr]}`).join(';');\r\n          const parent = drop ? dropCell : this.graph.getDefaultParent();\r\n          this.graph.getModel().beginUpdate();\r\n          try {\r\n            let vertex = this.graph.insertVertex(parent, null, null, realX - (width / 2), realY - (height / 2), width, height, style + ';whiteSpace=wrap;word-break=break-all');\r\n            vertex.title = `<div style='word-break:break-all'>` + toolItem['title'] + '</div>';\r\n            vertex.dropAble = toolItem['dropAble'];\r\n            vertex.id = toolItem['id'] + '-' + toolItem['idSeed'];\r\n            toolItem['idSeed']++;\r\n            vertex['isGroup'] = toolItem['id'].includes('group') ? true : false\r\n\r\n          } finally {\r\n            this.graph.getModel().endUpdate();\r\n          }\r\n        };\r\n        // 设置节点被拖拽时的样式(预览)\r\n        var generalcreateDragPreview = () => {\r\n          var elt = document.createElement('div');\r\n          elt.style.width = `${width}px`;\r\n          elt.style.height = `${height}px`;\r\n          elt.style.transform = 'translate(-50%,-50%)';\r\n          elt.className = itemClass;\r\n          return elt;\r\n        };\r\n        // 允许拖拽\r\n        let ds = mxUtils.makeDraggable(dom, this.graph, generalDropHandler, generalcreateDragPreview(), 0, 0, true, true);\r\n        ds.setGuidesEnabled(true);\r\n      });\r\n    },\r\n\r\n    // 初始化自定义图标\r\n    initCustomToolbar () {\r\n      // 获取工具栏中的自定义节点的dom\r\n      var toolbarDomArray = this.$refs.toolItem;\r\n      if (!(toolbarDomArray instanceof Array) || toolbarDomArray.length <= 0) {\r\n        return;\r\n      }\r\n\r\n      toolbarDomArray.forEach((dom, domIndex) => {\r\n        var toolItem = this.toolbarItems[domIndex];\r\n        var { width, height } = toolItem;\r\n        var image = toolItem.style.image;\r\n        //定义拖拽后的回调函数\r\n        var dropHandler = (graph, evt, cell, x, y) => {\r\n          this.addCustomCell(cell, toolItem, x, y);\r\n        };\r\n        // 设置节点被拖拽时的样式(预览)\r\n        var createDragPreview = () => {\r\n          var elt = document.createElement('div');\r\n          elt.style.border = '2px dotted black';\r\n          elt.style.width = `${width}px`;\r\n          elt.style.height = `${height}px`;\r\n          elt.style.backgroundImage = `url(${image})`;\r\n          elt.style.backgroundSize = `contain`;\r\n          elt.style.transform = 'translate(-50%,-50%)';\r\n          elt.style.backgroundRepeat = 'no-repeat';\r\n          return elt;\r\n        };\r\n        // 允许拖拽\r\n        let ds = mxUtils.makeDraggable(dom, this.graph, dropHandler, createDragPreview(), 0, 0, false, true, true);\r\n        ds.setGuidesEnabled(true);\r\n      });\r\n    },\r\n    // 拖拽组元素\r\n    makeToolbarDraggable () {\r\n      const grouptoolItem = this.$refs.grouptoolItem;\r\n      if (!(grouptoolItem instanceof Array)) {\r\n        return;\r\n      }\r\n      grouptoolItem.forEach((item, index) => {\r\n        const toolItem = this.grouptoolItems[index];\r\n        const { height, width } = toolItem;\r\n        // 创建拖拽时的预览图形\r\n        const createDragPreview = () => {\r\n          const elt = document.createElement('div');\r\n          elt.style.border = '2px dotted black';\r\n          elt.style.width = `${width}px`;\r\n          elt.style.height = `${height}px`;\r\n          elt.style.transform = 'translate(-50%,-50%)';\r\n          elt.className = toolItem.class;\r\n          return elt;\r\n        };\r\n        // drop的处理函数\r\n        const dropHandler = (graph, evt, cell, x, y) => {\r\n          this.instanceCell(cell, toolItem, x, y);\r\n        };\r\n        // 获取拖放的对象\r\n        const getDropTarget = (graph, x, y) => {\r\n          const cell = graph.getCellAt(x, y);\r\n          return R.propOr(null, 'dropAble', cell) ? cell : null;\r\n        };\r\n        mxUtils.makeDraggable(item, this.graph, dropHandler, createDragPreview(index), 0, 0, false, true, true, getDropTarget);\r\n      });\r\n    },\r\n    // 新增组元素\r\n    instanceCell (dropCell, toolItem, x, y) {\r\n      const drop = !R.isNil(dropCell);\r\n      // drop && this.$message.info(`${toolItem['title']}节点入${dropCell.title}`);\r\n      const styleObj = toolItem['style'] || {};\r\n      const style = Object.keys(styleObj).map((key) => `${key}=${styleObj[key]}`).join(';');\r\n      const realX = drop ? x - dropCell.geometry.x : x;\r\n      const realY = drop ? y - dropCell.geometry.y : y;\r\n      const { height, width } = toolItem;\r\n      const parent = drop ? dropCell : this.graph.getDefaultParent();\r\n      const isHtml = Object.is('1', toolItem['style']['html']);\r\n      const tmpIndex = Date.now();\r\n      const value = isHtml ? toolItem['html'](tmpIndex) : null;\r\n      this.graph.getModel().beginUpdate();\r\n      try {\r\n        const vertex = this.graph.insertVertex(parent, null, value, realX - (width / 2), realY - (height / 2), width, height, style + ';whiteSpace=wrap;word-break=break-all');\r\n        vertex['title'] = toolItem['title'];\r\n        vertex['dropAble'] = toolItem['dropAble'];\r\n        vertex['id'] = toolItem['id'];\r\n        vertex['isGroup'] = toolItem['id'].includes('group') ? true : false\r\n        // 设置连接点\r\n        // cell['constraints'] = toolItem['constraints']\r\n        this.$nextTick(() => {\r\n          const createdCallback = toolItem['created'];\r\n          if (createdCallback instanceof Function) {\r\n            createdCallback(this.graph, vertex, tmpIndex);\r\n          }\r\n        });\r\n      } finally {\r\n        this.graph.getModel().endUpdate();\r\n      }\r\n    },\r\n\r\n    // 基础配置函数\r\n    eventCenter () {\r\n\r\n      // 给graph添加事件\r\n      // 监听自定义事件\r\n      this.graph.addListener(mxEvent.NORMAL_TYPE_CLICKED, (sender, evt) => {\r\n        let cell = evt.properties.cell.state.cell;\r\n        this.currentNormalType = cell;\r\n      });\r\n      // this.graph.addListener(mxEvent.VERTEX_START_MOVE, (sender, evt) => {\r\n      //   console.log('VERTEX_START_MOVE', sender, evt);\r\n      // });\r\n      // 画布平移事件\r\n      this.graph.addListener(mxEvent.PAN, (sender, evt) => {\r\n        console.log('画布平移了', sender, evt);\r\n      });\r\n      // 新增节点事件\r\n      this.graph.addListener(mxEvent.ADD_CELLS, (sender, evt) => {\r\n        this.$nextTick(() => {\r\n          let addCell = evt.properties.cells[0];\r\n          if (addCell.vertex) {\r\n            // 判断是否为组节点\r\n            if (addCell.isGroup) {\r\n              this.$message.info('Added a group');\r\n              let groupObj = _.pick(addCell, ['id', 'title', 'parent', 'geometry']);\r\n              this.jsonData['cells']['groups'].push(groupObj);\r\n            } else {\r\n              let nodeObj = _.pick(addCell, ['id', 'title', 'parent', 'geometry']);\r\n              this.jsonData['cells']['nodes'].push(nodeObj);\r\n              this.$message.info('添加了一个节点');\r\n            }\r\n            //  向jsonData中更新数据\r\n          } else if (addCell.edge) {\r\n            console.log(addCell)\r\n            let lineObj = _.pick(addCell, ['id', 'edge', 'source', 'parent', 'geometry', 'value']);\r\n            this.jsonData['edges'].push(lineObj);\r\n            this.$message.info('A line was added');\r\n          }\r\n        })\r\n      });\r\n\r\n      //拖动节点的事件\r\n      this.graph.addListener(mxEvent.CELLS_MOVED, (sender, evt) => {\r\n        // console.log(this.graph, 'graph');\r\n        let cellsName = [];\r\n        this.$nextTick(() => {\r\n          evt.properties.cells.forEach(item => {\r\n            item.parent.id.includes('group') && cellsName.push(item.title);\r\n          });\r\n          evt.properties.cells[0].parent.id !== '1' && this.$message.info(`${[...cellsName]}节点进入${evt.properties.cells[0].parent.title}`);\r\n        });\r\n      });\r\n      // 删除节点触发事件\r\n      this.graph.addListener(mxEvent.CELLS_REMOVED, (sender, evt) => {\r\n        this.$nextTick(() => {\r\n          let removeCells = evt.properties.cells;\r\n          console.log(removeCells, 'removeCells')\r\n          removeCells.forEach(item => {\r\n            // 拿每一个cellId在jsonData中进行遍历,并进行移除\r\n            if (item.vertex) {\r\n              // 判断是否为组节点\r\n              if (item.isGroup) {\r\n                this.$message.info(`remove${item.id}group`);\r\n                this.jsonData['cells']['groups'].splice(this.jsonData['cells']['groups'].findIndex(jsonItem => { return jsonItem.id === item.id }), 1)\r\n              } else {\r\n                this.$message.info(`remove${item.id}node`);\r\n                this.jsonData['cells']['nodes'].splice(this.jsonData['cells']['nodes'].findIndex(jsonItem => { return jsonItem.id === item.id }), 1)\r\n              }\r\n            } else if (item.edge) {\r\n              this.$message.info('Removed line');\r\n              this.jsonData['edges'].splice(this.jsonData['edges'].findIndex(jsonItem => { return jsonItem.id === item.id }), 1)\r\n            }\r\n            // this.jsonData.forEach(item)\r\n          });\r\n        });\r\n      });\r\n\r\n    },\r\n    // 配置鼠标事件\r\n    configMouseEvent () {\r\n      this.graph.addMouseListener(\r\n        {\r\n          currentState: null,\r\n          previousStyle: null,\r\n\r\n          mouseDown: (sender, evt) => {\r\n            if (!evt.state) {\r\n              console.log('点击了画布');\r\n              return;\r\n            } else if (evt.state.cell.edge) {\r\n              console.log('点击了连线');\r\n              return;\r\n            }\r\n\r\n            const cell = evt.state.cell;\r\n            let clickNormalType = false;\r\n            if (cell.style !== undefined) {\r\n              clickNormalType = cell.style.includes('normalType');\r\n            }\r\n            if (clickNormalType) {\r\n              // 使用 mxGraph 事件中心，注册自定义事件\r\n              this.graph.fireEvent(new mxEventObject(mxEvent.NORMAL_TYPE_CLICKED, 'cell', evt));\r\n            } else {\r\n              return;\r\n            }\r\n          },\r\n\r\n          mouseMove: (sender, me) => {\r\n            // console.log('mouseMove')\r\n            this.graphX = Math.ceil(me.graphX);\r\n            this.graphY = Math.ceil(me.graphY);\r\n          },\r\n\r\n          mouseUp: (sender, evt) => {\r\n            console.log('mouseUp');\r\n            if (evt.sourceState === undefined) {\r\n              return false;\r\n            } else {\r\n              var cell = evt.sourceState.cell;\r\n              // console.log(cell);\r\n              //  var cell = this.graph.getSelectionCell();\r\n              if (cell) {\r\n                this.textValue = cell['value'] ? cell['value'] : cell['title'];\r\n                console.log(this.textValue, 'cellValue')\r\n                console.log('cellValuie', cell)\r\n                cell.vertex ? this.isNode = true : this.isNode = false;\r\n                var getcellStyle = cell.getStyle() ? cell.getStyle() : null;\r\n                if (!this.isNode) {\r\n                  // 点击的不是节点\r\n                  getcellStyle ? this.edgeStyle = getcellStyle : 'orthogonalEdgeStyle';\r\n                } else {\r\n                  // 点击的是节点\r\n                  // console.log('getcellStyle', getcellStyle);\r\n                  if (getcellStyle) {\r\n                    var arr = getcellStyle.split(';');\r\n                    // arr.pop()\r\n                    var styleObject = {};\r\n                    arr.forEach(item => {\r\n                      styleObject[item.split('=')[0]] = item.split('=')[1];\r\n                    });\r\n                    this.cellStyle = styleObject;\r\n                  }\r\n                }\r\n              } else {\r\n                this.$message.error('Please select a node or connection');\r\n              }\r\n            }\r\n          },\r\n        });\r\n    },\r\n    //配置键盘事件\r\n    configKeyEvent () {\r\n      // 启动盘事件键\r\n      this.keyHandler = new mxKeyHandler(this.graph);\r\n      // 键盘按下删除键绑定事件\r\n      this.keyHandler.bindKey(46, () => {\r\n        this.deleteNode()\r\n      });\r\n      this.keyHandler.bindControlKey(65, () => {\r\n        this.graph.selectAll();\r\n      });\r\n      this.keyHandler.bindControlKey(67, () => {\r\n        this.copy();\r\n      });\r\n      this.keyHandler.bindControlKey(88, () => {\r\n        this.cut();\r\n      });\r\n      this.keyHandler.bindControlKey(86, () => {\r\n        this.paste();\r\n      });\r\n      this.keyHandler.bindControlKey(89, () => {\r\n        this.goForward();\r\n      });\r\n      this.keyHandler.bindControlKey(90, () => {\r\n        this.goBack();\r\n      });\r\n    },\r\n    //配置右键菜单栏\r\n    configMenu () {\r\n      // 禁用浏览器默认的右键菜单栏\r\n      mxEvent.disableContextMenu(this.$refs.container);\r\n      this.graph.popupMenuHandler.factoryMethod = (menu) => {\r\n        menu.addItem('Output all nodes', null, () => {\r\n          Object.values(this.graph.getModel().cells).forEach((cell) => {\r\n            console.log(cell);\r\n          });\r\n        });\r\n\r\n        menu.addSeparator();\r\n        menu.addItem('copy', null, () => {\r\n          this.copy();\r\n        });\r\n\r\n        menu.addItem('affix', null, () => {\r\n          this.paste();\r\n        });\r\n\r\n        menu.addSeparator();\r\n        menu.addItem('assembly', null, () => {\r\n          this.enGroup();\r\n        });\r\n\r\n        menu.addItem('Salvage', null, () => {\r\n          this.graph.ungroupCells(this.graph.getSelectionCells());\r\n        });\r\n        menu.addSeparator();\r\n        menu.addItem('Flowing line', null, () => {\r\n          let cell = this.graph.getSelectionCell();\r\n          if (cell && cell.edge) {\r\n            let state = this.graph.view.getState(cell);\r\n            state.shape.node.getElementsByTagName('path')[0].removeAttribute('visibility');\r\n            state.shape.node.getElementsByTagName('path')[0].setAttribute('stroke-width', '6');\r\n            state.shape.node.getElementsByTagName('path')[0].setAttribute('stroke', 'lightGray');\r\n            state.shape.node.getElementsByTagName('path')[1].setAttribute('class', 'flow');\r\n          } else {\r\n            this.$message.error('Please select connection');\r\n          }\r\n        });\r\n        menu.addSeparator();\r\n        // menu.addItem('配置完成', null, () => {\r\n        //   let cell = this.graph.getSelectionCell().children[0];\r\n        //   let cellArrayStyle = cell.getStyle().split(';');\r\n        //   cellArrayStyle.shift();\r\n        //   let cellStyle = {};\r\n        //   cellArrayStyle.forEach(item => {\r\n        //     cellStyle[item.split('=')[0]] = item.split('=')[1];\r\n        //   });\r\n        //   let cellImage = cellStyle['image'].replace('unselect', 'selected');\r\n        //   this.graph.setCellStyles(mxConstants.STYLE_IMAGE, cellImage, [cell]);\r\n        //   this.graph.refresh(cell);\r\n        // });\r\n        menu.addItem('select all', null, () => {\r\n          this.graph.selectAll();\r\n        });\r\n        menu.addItem('Select all nodes', null, () => {\r\n          this.graph.selectCells(true, false);\r\n        });\r\n        menu.addItem('Select all connections', null, () => {\r\n          this.graph.selectCells(false, true);\r\n        });\r\n        // 分割符号\r\n        menu.addSeparator();\r\n        menu.addItem('Modify style', null, () => {\r\n          var cell = this.graph.getSelectionCell();\r\n          if (cell) {\r\n            cell.vertex ? this.isNode = true : this.isNode = false;\r\n            var getcellStyle = cell.getStyle() ? cell.getStyle() : '';\r\n            if (getcellStyle) {\r\n              var arr = getcellStyle.split(';');\r\n              //弹出最后一个空样式\r\n              // arr.pop()\r\n              var styleObject = {};\r\n              arr.forEach((item => {\r\n                styleObject[item.split('=')[0]] = item.split('=')[1];\r\n              }));\r\n              this.cellStyle = styleObject;\r\n              // if (this.isNode) {\r\n\r\n              // }\r\n            }\r\n          } else {\r\n            this.$message.error('Please select a node or connection');\r\n          }\r\n        });\r\n      };\r\n    },\r\n    //  配置全局样式\r\n    configureStylesheet (graph) {\r\n      // 设置节点的文字可被移动\r\n      graph.vertexLabelsMovable = false;\r\n      // 设置鼠标悬浮至节点或者连线时高亮显示的颜色\r\n      new mxCellTracker(graph, '#409eff');\r\n      var style = new Object();\r\n      style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_LABEL;\r\n      style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\r\n      style[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\r\n      style[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\r\n      style[mxConstants.STYLE_IMAGE_ALIGN] = mxConstants.ALIGN_CENTER;\r\n      style[mxConstants.STYLE_IMAGE_VERTICAL_ALIGN] = mxConstants.ALIGN_CENTER;\r\n      // style[mxConstants.STYLE_SPACING_TOP] = 6;\r\n      style[mxConstants.STYLE_SPACING_LEFT] = 5;\r\n      // style[mxConstants.STYLE_GRADIENTCOLOR] = 'skyblue'; // 渐变颜色\r\n      style[mxConstants.STYLE_STROKECOLOR] = '#5d65df';   // 线条颜色\r\n      style[mxConstants.STYLE_FILLCOLOR] = '#FFFFFF';\r\n      style[mxConstants.STYLE_FONTCOLOR] = '#1d258f';     // 字体颜色\r\n      style[mxConstants.STYLE_FONTFAMILY] = 'Verdana';    // 字体风格\r\n      style[mxConstants.STYLE_FONTSIZE] = '12';           // 字体大小\r\n      style[mxConstants.STYLE_FONTSTYLE] = '0';           // 斜体字\r\n      style[mxConstants.WORD_WRAP] = 'normal';             // 文字换行    word-break: break-all;\r\n      style[mxConstants['word-break']] = 'break-all';             // 文字换行\r\n      style[mxConstants.STYLE_WHITE_SPACE] = 'wrap';             // 文字换行\r\n      style[mxConstants.STYLE_ROUNDED] = false;             // 圆角\r\n      style[mxConstants.STYLE_IMAGE_WIDTH] = '28';        // 图片宽度\r\n      style[mxConstants.STYLE_IMAGE_HEIGHT] = '28';       // 图片高度\r\n      style[mxConstants.STYLE_OPACITY] = '100';            // 节点透明度(不包含字体)\r\n      graph.getStylesheet().putDefaultVertexStyle(style);\r\n\r\n      style = new Object();\r\n      style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_SWIMLANE;\r\n      style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\r\n      style[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\r\n      style[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_TOP;\r\n      style[mxConstants.STYLE_FILLCOLOR] = '#409eff';\r\n      // style[mxConstants.STYLE_GRADIENTCOLOR] = '#409eff';\r\n      style[mxConstants.STYLE_STROKECOLOR] = '#409eff';\r\n      style[mxConstants.STYLE_FONTCOLOR] = '#000000';\r\n      style[mxConstants.STYLE_ROUNDED] = false;\r\n      style[mxConstants.STYLE_OPACITY] = '80';\r\n      style[mxConstants.STYLE_STARTSIZE] = '30';\r\n      style[mxConstants.STYLE_FONTSIZE] = '16';\r\n      style[mxConstants.STYLE_FONTSTYLE] = 1;\r\n      graph.getStylesheet().putCellStyle('group', style);\r\n\r\n      style = new Object();\r\n      style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE;\r\n      style[mxConstants.STYLE_FONTCOLOR] = '#774400';\r\n      style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\r\n      style[mxConstants.STYLE_PERIMETER_SPACING] = '6';\r\n      style[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_LEFT;\r\n      style[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\r\n      style[mxConstants.STYLE_FONTSIZE] = '10';\r\n      style[mxConstants.STYLE_FONTSTYLE] = 2;\r\n      style[mxConstants.STYLE_IMAGE_WIDTH] = '16';\r\n      style[mxConstants.STYLE_IMAGE_HEIGHT] = '16';\r\n      style[mxConstants.STYLE_BACKGROUNDCOLOR] = 'transparent';\r\n      graph.getStylesheet().putCellStyle('port', style);\r\n\r\n\r\n      style = graph.getStylesheet().getDefaultEdgeStyle();\r\n      style[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR] = '#FFFFFF';\r\n      style[mxConstants.STYLE_STROKEWIDTH] = '2';\r\n      style[mxConstants.STYLE_ROUNDED] = true;\r\n      // 获取全局Edge、label样式\r\n      var edgeStyle = this.graph.getStylesheet().getDefaultEdgeStyle();\r\n      let labelStyle = this.graph.getStylesheet().getDefaultVertexStyle();\r\n      // labelStyle[mxConstants.STYLE_WHITE_SPACE] = 'wrap'; //自动换行\r\n      console.log(labelStyle, 'labelStyle')\r\n      // 设置连线风格(设置为正交折线)\r\n      edgeStyle['edgeStyle'] = 'orthogonalEdgeStyle';\r\n\r\n      // 选中 cell/edge 后的伸缩大小的点/拖动连线位置的点的颜色\r\n      // style[mxConstants.STYLE_WHITE_SPACE] = 'wrap'\r\n\r\n      mxConstants.HANDLE_FILLCOLOR = '#409eff';\r\n      mxConstants.HANDLE_STROKECOLOR = 'transparent';\r\n      mxConstants.STYLE_ANCHOR_POINT_DIRECTION = 'anchorPointDirection';\r\n      mxConstants.STYLE_STYLE_ROTATION = 'rotation';\r\n      // 是否缩放网格\r\n      mxGraphHandler.prototype.scaleGrid = true;\r\n      mxGraph.prototype.pageBreakDashed = false;\r\n\r\n      // 指定是否应使用其他单元格对齐当前所选内容的右侧，中间或左侧。默认为false。\r\n      mxGraphHandler.prototype.guidesEnabled = true;\r\n      mxGraphHandler.prototype.htmlPreview = false;\r\n      mxGraphHandler.prototype.allowLivePreview = true;\r\n      // 指定预览形状的颜色。默认为黑色。\r\n      mxGraphHandler.prototype.previewColor = \"red\"\r\n      // 应该使用实时预览的最大单元数。默认值为0，表示没有实时预览。\r\n      mxGraphHandler.prototype.maxLivePreview = 100;\r\n\r\n      // Alt 按下禁用导航线\r\n      mxGraphHandler.prototype.useGuidesForEvent = function (me) {\r\n        return !mxEvent.isAltDown(me.getEvent());\r\n      };\r\n      // 导航线颜色\r\n      mxConstants.GUIDE_COLOR = '#1a73e8';\r\n      // 导航线宽度\r\n      mxConstants.GUIDE_STROKEWIDTH = 2;\r\n      // 导航线自动连接到目标\r\n      mxEdgeHandler.prototype.snapToTerminals = true;\r\n      // 选中线条时的虚线颜色\r\n      mxConstants.EDGE_SELECTION_COLOR = '#99ccff';\r\n      // mxConstants.DEFAULT_INVALID_COLOR = 'yellow';\r\n      // mxConstants.INVALID_CONNECT_TARGET_COLOR = 'yellow';\r\n      // 连线(未满足连线要求)时预览的颜色\r\n      mxConstants.INVALID_COLOR = '#99ccff';\r\n      // 连线(满足连线要求)时预览的颜色\r\n      mxConstants.VALID_COLOR = 'blue';\r\n      // mxConstants.GUIDE_COLOR = 'yellow';\r\n      // mxConstants.LOCKED_HANDLE_FILLCOLOR = '#24bcab';\r\n      // 选中节点时选中框的颜色\r\n      mxConstants.VERTEX_SELECTION_COLOR = '#99ccff';\r\n\r\n      //折叠-/展开+图标大小\r\n      // mxGraph.prototype.collapsedImage = new mxImage('images/collapsed.gif', 15, 15);\r\n      // mxGraph.prototype.expandedImage = new mxImage('images/expanded.gif', 15, 15);\r\n\r\n      // 配置节点中心的连接图标(注釋掉即可指定錨點連接到另一個節點的錨點上)\r\n      mxConnectionHandler.prototype.connectImage = new mxImage('./icon/connectionpoint.png', 14, 14);\r\n      // 显示中心端口图标\r\n      graph.connectionHandler.targetConnectImage = false;\r\n      // 是否开启浮动自动连接\r\n      this.graph.connectionHandler.isConnectableCell = function () {\r\n        return true;\r\n      };\r\n      // 设定锚点的位置、可编辑状态和图标\r\n      mxConstraintHandler.prototype.pointImage = new mxImage('icon/dot.svg', 10, 10)\r\n      // 设置锚点上的高亮颜色\r\n      mxConstraintHandler.prototype.createHighlightShape = function () {\r\n        return new mxEllipse(null, '#409eff99', '#409eff99', 15)\r\n      }\r\n\r\n      mxShape.prototype.constraints = [\r\n        new mxConnectionConstraint(new mxPoint(0, 0), true),\r\n        new mxConnectionConstraint(new mxPoint(0.25, 0), true),\r\n        new mxConnectionConstraint(new mxPoint(0.5, 0), true),\r\n        new mxConnectionConstraint(new mxPoint(0.75, 0), true),\r\n        new mxConnectionConstraint(new mxPoint(0, 0.25), true),\r\n        new mxConnectionConstraint(new mxPoint(0, 0.5), true),\r\n        new mxConnectionConstraint(new mxPoint(0, 0.75), true),\r\n        new mxConnectionConstraint(new mxPoint(1, 0), true),\r\n        new mxConnectionConstraint(new mxPoint(1, 0.25), true),\r\n        new mxConnectionConstraint(new mxPoint(1, 0.5), true),\r\n        new mxConnectionConstraint(new mxPoint(1, 0.75), true),\r\n        new mxConnectionConstraint(new mxPoint(0, 1), true),\r\n        new mxConnectionConstraint(new mxPoint(0.25, 1), true),\r\n        new mxConnectionConstraint(new mxPoint(0.5, 1), true),\r\n        new mxConnectionConstraint(new mxPoint(0.75, 1), true),\r\n        new mxConnectionConstraint(new mxPoint(1, 1), true)];\r\n      mxPolyline.prototype.constraints = null;\r\n    },\r\n\r\n    //设置连线样式\r\n    changeDashed (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_DASHED, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    //设置线条颜色样式\r\n    changeStrokeColor (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_STROKECOLOR, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    //设置线条宽度\r\n    changeStrokeWidth (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_STROKEWIDTH, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    //设置字体大小\r\n    changeFontSize (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_FONTSIZE, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    //设置字体颜色\r\n    changeFontColor (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_FONTCOLOR, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    //设置线条说明的背景颜色\r\n    changeLabelBackgroundColor (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_LABEL_BACKGROUNDCOLOR, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    changeFillColor (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_FILLCOLOR, value, [...cell]);\r\n    },\r\n\r\n    changeShadow (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_SHADOW, +(value), [...cell]);\r\n    },\r\n\r\n    changeFontStyle (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_FONTSTYLE, value, [...cell]);\r\n    },\r\n\r\n    changeNodeimage (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_IMAGE, value, [...cell]);\r\n    },\r\n\r\n    // 删除节点\r\n    deleteNode () {\r\n      var cells = this.graph.getSelectionCells();\r\n      this.graph.removeCells([...cells]);\r\n    },\r\n\r\n    // 修改连线样式\r\n    edgeChange (value) {\r\n      try {\r\n        var cell = this.graph.getSelectionCells();\r\n        this.graph.setCellStyles('edgeStyle', value, [...cell]);\r\n        let style = cell[0].style;\r\n        let valStr = cell[0].value;\r\n        this.graph.removeCells(cell);\r\n        let parent = this.graph.getDefaultParent();\r\n        let v1 = '';\r\n        let v2 = '';\r\n        // 获取ID单元\r\n        parent['children'].forEach(item => {\r\n          item['id'] === cell[0].source.id ? v1 = item : false;\r\n          item['id'] === cell[0].target.id ? v2 = item : false;\r\n        });\r\n        this.graph.getModel().beginUpdate();\r\n        this.graph.insertEdge(parent, null, valStr, v1, v2, style);\r\n        this.graph.getModel().endUpdate();\r\n        this.$message.success('Succeeded in switching the connection style');\r\n      } catch (error) {\r\n        this.$message.error('Failed to switch the connection style');\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    // 修改节点文本内容\r\n    textValueChange (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      console.log(value, 'Node text new content', this.graph);\r\n      this.graph.cellLabelChanged(cell[0], value)\r\n    },\r\n    changeConfigOrder (val) {\r\n      // 获取当前的normalType元素,并更新他的title\r\n      this.currentNormalType.title = val.newConfigOrder;\r\n      // 修改指定cell的背景图片\r\n      this.graph.setCellStyles(mxConstants.STYLE_IMAGE, `./images/order/unselect-${val.newConfigOrder}.png`, [this.currentNormalType]);\r\n      this.graph.refresh(this.currentNormalType);\r\n    },\r\n\r\n    //复制\r\n    copy () {\r\n      let selectionCells = this.graph.getSelectionCells();\r\n      mxClipboard.copy(this.graph, selectionCells);\r\n    },\r\n    //粘贴\r\n    paste () {\r\n      mxClipboard.paste(this.graph);\r\n    },\r\n    //剪切\r\n    cut () {\r\n      var cells = [];\r\n      cells = this.graph.getSelectionCells();\r\n      mxClipboard.cut(this.graph, cells);\r\n    },\r\n    // 前进\r\n    goForward () {\r\n      this.undoMng.redo();\r\n    },\r\n\r\n    // 撤退\r\n    goBack () {\r\n      this.undoMng.undo();\r\n    },\r\n\r\n    // 放大\r\n    zoomIn () {\r\n      this.graph.zoomIn();\r\n    },\r\n\r\n    // 缩小\r\n    zoomOut () {\r\n      this.graph.zoomOut();\r\n    },\r\n\r\n    // 等比例缩放\r\n    autoSize () {\r\n      // 方法一\r\n      // this.editor.execute('actualSize');\r\n      //方法二：\r\n      this.graph.zoomActual();\r\n      this.graph.fit();//自适应\r\n      this.graph.center();//将画布放到容器中间\r\n    },\r\n\r\n    // 生成图片\r\n    showImage () {\r\n      this.editor.execute('show');//直接页面跳转,并以svg流程图\r\n      // 下载svg流程图\r\n      console.log('this.gtaph', this.graph)\r\n      const svg = this.exportModelSvg();\r\n      const blob = new Blob([svg], { type: 'image/svg+xml' });\r\n      const url = URL.createObjectURL(blob);\r\n      let link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = 'model.svg';\r\n      link.click();\r\n    },\r\n\r\n    exportModelSvg () {\r\n      let scale = this.graph.view.scale;\r\n      let bounds = this.graph.getGraphBounds();\r\n      let border = 10;\r\n\r\n      // Prepares SVG document that holds the output\r\n      let svgDoc = mxUtils.createXmlDocument();\r\n      let root = (svgDoc.createElementNS != null) ?\r\n        svgDoc.createElementNS(mxConstants.NS_SVG, 'svg') : svgDoc.createElement('svg');\r\n\r\n      if (root.style != null) {\r\n        root.style.backgroundColor = '#FFFFFF';\r\n      } else {\r\n        root.setAttribute('style', 'background-color:#FFFFFF');\r\n      }\r\n\r\n      if (svgDoc.createElementNS == null) {\r\n        root.setAttribute('xmlns', mxConstants.NS_SVG);\r\n      }\r\n      let width = Math.ceil(bounds.width * scale / scale + 2 * border);\r\n      let height = Math.ceil(bounds.height * scale / scale + 2 * border);\r\n      root.setAttribute('class', 'svg-container');\r\n      root.setAttribute('width', width + 'px');\r\n      root.setAttribute('height', height + 'px');\r\n      root.setAttribute('viewBox', \"0 0 \" + width + \" \" + height);\r\n      root.setAttribute('xmlns:xlink', mxConstants.NS_XLINK);\r\n      root.setAttribute('version', '1.1');\r\n\r\n      // Adds group for anti-aliasing via transform\r\n      let group = (svgDoc.createElementNS != null) ?\r\n        svgDoc.createElementNS(mxConstants.NS_SVG, 'g') : svgDoc.createElement('g');\r\n      group.setAttribute('transform', 'translate(0.5,0.5)');\r\n      root.appendChild(group);\r\n      svgDoc.appendChild(root);\r\n\r\n      // Renders graph. Offset will be multiplied with state's scale when painting state.\r\n      let svgCanvas = new mxSvgCanvas2D(group);\r\n      svgCanvas.translate(Math.floor(border / scale - bounds.x), Math.floor(border / scale - bounds.y));\r\n      svgCanvas.scale(scale);\r\n\r\n      let imgExport = new mxImageExport();\r\n      imgExport.drawState(this.graph.getView().getState(this.graph.model.root), svgCanvas);\r\n\r\n      //let xml = encodeURIComponent(mxUtils.getXml(root)); //no need\r\n      let xml = mxUtils.getXml(root);\r\n      return xml;\r\n\r\n    },\r\n    enGroup () {\r\n      this.editor.graph.setSelectionCell(this.editor.groupCells());\r\n      this.$message.success('Combination success');\r\n      // this.editor.groupCells(null, 0, this.graph.getSelectionCells());\r\n    },\r\n\r\n    // 开始导入xml文件\r\n    inPutXml () {\r\n      this.isOutputXml = false;\r\n      this.uploadDataVisible = true;\r\n      this.graphXml = '';\r\n    },\r\n\r\n    // 导入xml文件后更新视图\r\n    uploadPaintFlow (newvalue) {\r\n      this.graph.selectAll();\r\n      this.graph.removeCells(this.graph.getSelectionCells());\r\n      setTimeout(() => {\r\n        this.decode(newvalue, this.graph);\r\n        this.$message.success('Render successfully');\r\n      }, 1000);\r\n    },\r\n\r\n    createXmlDom (str) {\r\n      if (document.all) { //判断浏览器是否是IE\r\n        var xmlDom = new ActiveXObject('Microsoft.XMLDOM');\r\n        xmlDom.loadXML(str);\r\n        return xmlDom;\r\n      } else {\r\n        return (new DOMParser()).parseFromString(str, 'text/xml');\r\n      }\r\n    },\r\n\r\n    // 渲染xml流程图\r\n    decode (graphXml, graph) {\r\n      this.graph.getModel().beginUpdate();\r\n      try {\r\n        // 渲染流程图 方法一:\r\n        // const xmlDocument = mxUtils.parseXml(graphXml)\r\n        // const decoder = new mxCodec(xmlDocument)\r\n        // decoder.decode(xmlDocument.documentElement, graph.getModel())\r\n        // 渲染流程图 方法二:\r\n        var xmlDoc = this.createXmlDom(graphXml);\r\n        var node = xmlDoc.documentElement;\r\n        var dec = new mxCodec(node.ownerDocument);\r\n        dec.decode(node, graph.getModel());\r\n      } finally {\r\n        this.graph.getModel().endUpdate();\r\n        // 渲染完成调整位置\r\n        this.autoSize()\r\n      }\r\n    },\r\n\r\n    // 导出xml文件\r\n    outPutXml () {\r\n      this.isOutputXml = true;\r\n      this.uploadDataVisible = true;\r\n      this.graphXml = this.encode(this.graph);\r\n    },\r\n\r\n    // 导出xml数据\r\n    encode (graph) {\r\n      const encoder = new mxCodec();\r\n      const result = encoder.encode(graph.getModel());\r\n      return mxUtils.getPrettyXml(result);\r\n    },\r\n    //添加箭头组函数\r\n    addStencilPalette (title, name, file) {\r\n      let req = mxUtils.load(file);\r\n      let root = req.getDocumentElement();\r\n      let shape = root.firstChild;\r\n      this.$set(this.palettes, name, { title, name, shapes: [] });\r\n      while (shape != null) {\r\n        if (shape.nodeType === mxConstants.NODETYPE_ELEMENT) {\r\n          const shapeName = shape.getAttribute('name');\r\n          const h = shape.getAttribute('h');\r\n          // shape.querySelector('path').setAttribute('fill', 'transparent')\r\n          const w = shape.getAttribute('w');\r\n          mxStencilRegistry.addStencil(shapeName, new mxStencil(shape));\r\n          this.palettes[name]['shapes'].push({\r\n            name: shape.getAttribute('name'),\r\n            width: w / 2,\r\n            height: h / 2,\r\n            fill: 'transparent',\r\n          });\r\n        }\r\n        shape = shape.nextSibling;\r\n      }\r\n    },\r\n\r\n    // 初始化箭头节点组的工具栏\r\n    initStencilToolBar () {\r\n      var stencilDomArray = this.$refs.stencilDragItem;\r\n      if (!(stencilDomArray instanceof Array) || stencilDomArray.length <= 0 || (this.graph == null || this.graph == undefined)) {\r\n        return;\r\n      }\r\n      stencilDomArray.forEach(dom => {\r\n        const shapeIndex = dom.getAttribute('shapeIndex');\r\n        const paletteIndex = dom.getAttribute('paletteIndex');\r\n        const shapeItem = Object.values(this.palettes)[paletteIndex]['shapes'][shapeIndex];\r\n        const shapeWidth = shapeItem['width'];\r\n        const shapeHeight = shapeItem['height'];\r\n        const stencilDragHandler = (graph, evt, cell, x, y) => {\r\n          this.instanceGraph(this.graph, shapeItem, x, y, shapeWidth, shapeHeight, cell);\r\n        };\r\n        var createDragPreview = () => {\r\n          //设置鼠标拖拽箭头节点时的样式\r\n          const elt = document.createElement('div');\r\n          elt.style.border = '2px dotted black';\r\n          elt.style.cursor = 'pointer';\r\n          elt.style.width = `${shapeWidth}px`;\r\n          elt.style.height = `${shapeHeight}px`;\r\n          elt.style.transform = 'translate(-50%,-50%)';\r\n          return elt;\r\n        };\r\n        dom.appendChild(this.createThumb(shapeItem, shapeWidth, shapeHeight));\r\n        mxUtils.makeDraggable(dom, this.graph, stencilDragHandler, createDragPreview(), 0, 0, false, true);\r\n      });\r\n    },\r\n\r\n    // 新增箭头节点\r\n    instanceGraph (graph, shapeItem, x, y, width, height, dropCell) {\r\n      const drop = !R.isNil(dropCell);\r\n      // drop && this.$message.info(`箭头节点入${dropCell.title}`);\r\n      const realX = drop ? x - dropCell.geometry.x : x;\r\n      const realY = drop ? y - dropCell.geometry.y : y;\r\n      const parent = drop ? dropCell : graph.getDefaultParent();\r\n      graph.getModel().beginUpdate();\r\n      try {\r\n        let cell = graph.insertVertex(parent, null, null, realX - (width / 2), realY - (height / 2), width, height, `shape=${shapeItem['name']};whiteSpace=wrap;word-break=break-all;`);\r\n        cell['isGroup'] = false\r\n        cell.customer = true;\r\n      } finally {\r\n        graph.getModel().endUpdate();\r\n      }\r\n    },\r\n\r\n    // 拖拽结束时新增的箭头节点\r\n    createThumb (item, width, height) {\r\n      const tmpGraph = new mxGraph(document.createElement('div'));\r\n      const thumbBorder = 2;\r\n      tmpGraph.labelsVisible = false;\r\n      tmpGraph.view.scaleAndTranslate(1, 0, 0);\r\n      this.instanceGraph(tmpGraph, item, 0, 0, width, height);\r\n      const bounds = tmpGraph.getGraphBounds();\r\n      const s = Math.floor(Math.min((width - 2 * thumbBorder) / bounds.width, (height - 2 * thumbBorder) / bounds.height) * 100) / 100;\r\n\r\n      tmpGraph.view.scaleAndTranslate(s, Math.floor((width - bounds.width * s) / 2 / s - bounds.x), Math.floor((height - bounds.height * s) / 2 / s - bounds.y));\r\n\r\n      const node = tmpGraph.view.getCanvas().ownerSVGElement.cloneNode(true);\r\n\r\n      node.style.position = 'relative';\r\n      node.style.overflow = 'hidden';\r\n      node.style.cursor = 'pointer';\r\n      node.style.width = `${width}px`;\r\n      node.style.height = `${height}px`;\r\n      node.style.left = `${thumbBorder}px`;\r\n      node.style.top = `${thumbBorder}px`;\r\n      node.style.display = 'inline-block';\r\n      return node;\r\n    },\r\n\r\n    // 添加序号图标\r\n    addPoint (cell, number) {\r\n      const normalTypeVertex = this.graph.insertVertex(cell, null, null,\r\n        null, null, 30, 30,\r\n        `port;normalType;orderPoint=true;fillColor=none;image=./images/order/unselect-${number}.png;spacingLeft=-45px;spacingBottom=-45px`);\r\n      // 固定序号图标的位置.不随节点变大而改变位置\r\n      // normalTypeVertex.geometry.offset = new mxPoint(45, 45);\r\n      // 序号图标无法连接\r\n      // normalTypeVertex.setConnectable(false);\r\n      normalTypeVertex.id = (cell.id).split('-')[0] + `-unselect-${number}`;\r\n      normalTypeVertex.value = number;\r\n      normalTypeVertex.geometry.relative = true;\r\n      // 将新增的图标鼠标悬浮换成手势的图案\r\n      // const oldGetCursorForCell = mxGraph.prototype.getCursorForCell;\r\n      // this.graph.getCursorForCell = function (...args) {\r\n      //   const [cell] = args;\r\n      //   if (cell.edge || cell.style == undefined) {\r\n      //     return;\r\n      //   }\r\n      //   return cell.style.includes('normalType') ?\r\n      //     'pointer' :\r\n      //     oldGetCursorForCell.apply(this, args);\r\n      // };\r\n    },\r\n\r\n    // 加载案例流程图\r\n    loadFlowCase (index) {\r\n      this.$confirm('Make sure your current flowchart data is saved locally ?', 'Tips', {\r\n        confirmButtonText: 'I have saved',\r\n        cancelButtonText: 'unload',\r\n        type: 'warning',\r\n      }).then(() => {\r\n        let loadData = '';\r\n        switch (index) {\r\n          case 1:\r\n            loadData = xmlData1;\r\n            break;\r\n          case 2:\r\n            loadData = xmlData2;\r\n            break;\r\n          case 3:\r\n            loadData = xmlData3;\r\n            break;\r\n        }\r\n        console.log('loadData', loadData);\r\n        let newXml = mxUtils.load(loadData).request.response;\r\n        this.graph.selectAll();\r\n        this.graph.removeCells(this.graph.getSelectionCells());\r\n        setTimeout(() => {\r\n          this.decode(newXml, this.graph);\r\n\r\n          this.$message.success('加载流程图案例成功');\r\n        }, 1000);\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消加载流程图案例',\r\n        });\r\n      });\r\n    },\r\n    handleScroll (e) {\r\n      if (e.wheelDelta === 120) {\r\n        this.graph.zoomIn()\r\n      } else {\r\n        this.graph.zoomOut()\r\n      }\r\n    },\r\n  },\r\n  mounted () {\r\n    // 检测浏览器兼容性\r\n    if (!mxClient.isBrowserSupported()) {\r\n      this.$message.error('当前浏览器不支持拓扑图功能，请更换浏览器访问，建议使用Chrome浏览器访问!');\r\n    } else {\r\n      // Overridden to define per-shape connection points\r\n      mxGraph.prototype.getAllConnectionConstraints = function (terminal) {\r\n        if (terminal != null && terminal.shape != null) {\r\n          if (terminal.shape.stencil != null) {\r\n            if (terminal.shape.stencil.constraints != null) {\r\n              return terminal.shape.stencil.constraints;\r\n            }\r\n          } else if (terminal.shape.constraints != null) {\r\n            return terminal.shape.constraints;\r\n          }\r\n        }\r\n        return null;\r\n      };\r\n      this.createGraph();\r\n      this.eventCenter();\r\n      this.configMouseEvent();\r\n      this.configMenu();\r\n      // this.addStencilPalette('Arrow set', 'arrows', path.join('./stencil/arrows.xml'));\r\n      this.$nextTick(() => {\r\n        this.initCustomToolbar();\r\n        this.initGeneralTool();\r\n        this.initStencilToolBar();\r\n        this.makeToolbarDraggable();\r\n        this.configKeyEvent();\r\n      });\r\n    }\r\n    document.getElementById('graphContainer').addEventListener('mousewheel', this.handleScroll, true) // 监听（绑定）滚轮滚动事件\r\n  },\r\n  destroyed () {\r\n    document.getElementById('graphContainer').removeEventListener('mousewheel', this.handleScroll) //  离开页面清除（移除）滚轮滚动事件\r\n    this.graph.destroy();\r\n  },\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n@import \"./general-shap.css\";\r\n.customToolbarContainer {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  .toolbarContainer {\r\n    padding-top: 50px;\r\n    font-size: 20px;\r\n    background: #efefef;\r\n    text-align: center;\r\n    background-color: #fff;\r\n    border-right: 1px solid #ededed;\r\n    width: 10%;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    overflow-y: scroll;\r\n    .general-toolbar {\r\n      .el-collapse-item__wrap .el-collapse-item__content {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-around;\r\n        align-content: space-around;\r\n        .common {\r\n          width: 30%;\r\n          cursor: pointer;\r\n          // padding: 10px;\r\n          height: 50px;\r\n          white-space: wrap;\r\n          text-align: center;\r\n          position: relative;\r\n          .generalTooltitle {\r\n            position: absolute;\r\n            bottom: -10px;\r\n            left: 0;\r\n            width: 100%;\r\n            // transform: translateX(-50%);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .custom-toolbar {\r\n      .custom-node {\r\n        display: inline-block;\r\n        margin: 10px 0 0 0;\r\n        width: 28%;\r\n        height: 60px;\r\n        border: 1px solid #000000;\r\n        padding: 5px 0;\r\n        img {\r\n          // width: 34px;\r\n          height: 34px;\r\n        }\r\n      }\r\n      .rectangle-node {\r\n        width: 45%;\r\n        height: 40px;\r\n        margin: 10px 0 0 0;\r\n        background-color: #ffff;\r\n        position: relative;\r\n        border: 1px solid #000000;\r\n        padding: none;\r\n        img {\r\n          position: absolute;\r\n          left: 0;\r\n          // width: none;\r\n          height: 35px;\r\n          top: 50%;\r\n          transform: translateY(-50%);\r\n        }\r\n        .node-title {\r\n          position: absolute;\r\n          left: 60%;\r\n          top: 50%;\r\n          transform: translate(-50%, -50%);\r\n        }\r\n      }\r\n      .el-collapse-item__content {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-around;\r\n        align-content: space-around;\r\n        span {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .toolbarContainer::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  .graphContainer {\r\n    margin-top: 50px;\r\n    height: 100% !important;\r\n    line-height: 100%;\r\n    position: relative;\r\n    overflow: hidden;\r\n    background-color: #fff !important;\r\n    flex: 1;\r\n  }\r\n  .graphContainer-background {\r\n    background-image: url(\"../../assets/grid.gif\");\r\n  }\r\n  .top-tools {\r\n    position: absolute;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 0 20px 0 20px;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    background-color: #fff;\r\n    height: 50px;\r\n    // border-bottom: 1px solid #ededed;\r\n    box-shadow: 0px 2px 8px -4px #c4c7c1;\r\n    .select-edgetype {\r\n      width: 100px;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  .mxRubberband {\r\n    background-color: rgb(58, 58, 207);\r\n    position: absolute;\r\n  }\r\n  .el-collapse-item__header {\r\n    padding-left: 30px;\r\n  }\r\n  .right-bar {\r\n    width: 260px;\r\n    background-color: #fff;\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    border-left: 1px solid #ededed;\r\n    padding-top: 50px;\r\n    box-sizing: border-box;\r\n    .json-viewer {\r\n      overflow: auto;\r\n      position: absolute;\r\n      top: 35%;\r\n      width: 260px;\r\n      height: 70%;\r\n      bottom: 0;\r\n      right: 0;\r\n    }\r\n  }\r\n  .tools-group {\r\n    display: flex;\r\n    justify-content: center;\r\n    button {\r\n      margin-left: 22px;\r\n    }\r\n  }\r\n  .aside-button-group {\r\n    width: 100%;\r\n    position: sticky;\r\n    top: 0px;\r\n    background: #ffffff;\r\n    box-sizing: border-box;\r\n    z-index: 1000;\r\n    border: 1px solid #ededed;\r\n    border-left: none;\r\n  }\r\n}\r\n\r\ntable.mxPopupMenu {\r\n  background: #fff;\r\n  cursor: pointer;\r\n  border: 1px solid #ededed;\r\n  padding: 5px;\r\n}\r\n\r\ndiv.mxPopupMenu {\r\n  position: absolute;\r\n}\r\n.shapgroud {\r\n  .el-collapse-item__content {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  svg g path {\r\n    fill: transparent;\r\n  }\r\n  .stencil-node {\r\n    width: 20%;\r\n  }\r\n  svg g path {\r\n    stroke: #515151;\r\n    -webkit-text-fill-color: #515151;\r\n  }\r\n}\r\n\r\n.flow {\r\n  stroke-dasharray: 8;\r\n  animation: dash 0.5s linear;\r\n  animation-iteration-count: infinite;\r\n}\r\n@keyframes dash {\r\n  to {\r\n    stroke-dashoffset: -16;\r\n  }\r\n}\r\n.group-item {\r\n  cursor: pointer;\r\n  height: 40px;\r\n  margin: 5px 0;\r\n  line-height: 40px;\r\n  width: 80%;\r\n  display: inline-block;\r\n  border: 1px solid #eeee;\r\n}\r\n</style>\r\n"]}]}