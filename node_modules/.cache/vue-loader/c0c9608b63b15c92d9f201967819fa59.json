{"remainingRequest":"D:\\thousandProject\\editor\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\thousandProject\\editor\\src\\views\\renderModel\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\thousandProject\\editor\\src\\views\\renderModel\\index.vue","mtime":1691244427732},{"path":"D:\\thousandProject\\editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\thousandProject\\editor\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\thousandProject\\editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\thousandProject\\editor\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"index.vue","sourceRoot":"src/views/renderModel","sourcesContent":["<template>\r\n  <div class=\"customToolbarContainer\">\r\n    <!-- 画布中的顶部工具栏 -->\r\n    <div class=\"top-tools\">\r\n      <el-col :span=\"4\">\r\n        <div\r\n          class=\"grid-content bg-purple\"\r\n          style=\"\r\n            color: rgb(64, 158, 255);\r\n            font-weight: 800;\r\n            font-size: 22px;\r\n            margin-left: 44px;\r\n          \"\r\n        >\r\n          Easy Editor\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"12\" class=\"tools-group\">\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"放大\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            icon=\"el-icon-zoom-in\"\r\n            style=\"font-size: 18px\"\r\n            type=\"text\"\r\n            @click=\"zoomIn\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"缩小\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            icon=\"el-icon-zoom-out\"\r\n            style=\"font-size: 18px\"\r\n            type=\"text\"\r\n            @click=\"zoomOut\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"等比缩放\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            @click=\"autoSize\"\r\n            type=\"text\"\r\n            style=\"font-size: 16px\"\r\n            icon=\"iconfont icon-expandalt-fill\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n        <!-- <el-tooltip class=\"item\" effect=\"dark\" content=\"导出xml文件\" placement=\"bottom\">\r\n          <el-button type=\"text\" icon=\"iconfont icon-xmloutput\" @click=\"outPutXml\"></el-button>\r\n        </el-tooltip>-->\r\n        <!-- <el-tooltip class=\"item\" effect=\"dark\" content=\"显示网格背景\" placement=\"bottom\">\r\n          <el-button type=\"text\" icon=\"iconfont icon-dituleiwanggequ-copy\"></el-button>\r\n        </el-tooltip>-->\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"导出为图片\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            type=\"text\"\r\n            icon=\"iconfont icon-tupian\"\r\n            @click=\"showImage\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n        <!-- <el-tooltip class=\"item\" effect=\"dark\" content=\"树形布局\" placement=\"bottom\">\r\n          <el-button type=\"text\" icon=\"iconfont icon-Directory-tree\"></el-button>\r\n        </el-tooltip>-->\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <div\r\n          class=\"grid-content bg-purple\"\r\n          style=\"display: flex; justify-content: flex-end; padding-right: 20px\"\r\n        >\r\n          <el-button round size=\"medium\" @click=\"loadFlowCase(1)\"\r\n            >组件关系</el-button\r\n          >\r\n          <el-button round size=\"medium\" @click=\"loadFlowCase(2)\"\r\n            >部署流程</el-button\r\n          >\r\n          <el-button round size=\"medium\" @click=\"loadFlowCase(3)\"\r\n            >Vue生命周期案例</el-button\r\n          >\r\n        </div>\r\n      </el-col>\r\n    </div>\r\n    <!-- 中心画布 -->\r\n    <div class=\"graphContainer\" id=\"graphContainer\" ref=\"container\"></div>\r\n    ]\r\n  </div>\r\n</template>\r\n<script>\r\n// 导入自定义图标数组\r\nimport {\r\n  MxEvent,\r\n  MxGraph,\r\n  MxEditor,\r\n  MxUtils,\r\n  MxGraphHandler,\r\n  MxConstants,\r\n  MxCodec,\r\n  MxRectangleShape,\r\n  MxCellTracker,\r\n  MxClient,\r\n  MxPerimeter,\r\n  MxEventObject,\r\n  MxGeometry,\r\n  MxCell,\r\n  ActiveXObject\r\n} from \"../../graph/index\"\r\nconst path = require('path');\r\n// 配置自定义事件\r\nObject.assign(MxEvent, {\r\n  NORMAL_TYPE_CLICKED: 'NORMAL_TYPE_CLICKED',\r\n});\r\n// 导入流程图案例数据\r\nconst xmlData1 = path.join(\"./data/data1.xml\");\r\nconst xmlData2 = path.join(\"./data/data2.xml\");\r\nconst xmlData3 = path.join(\"./data/data3.xml\");\r\nexport default {\r\n\r\n  components: {\r\n  },\r\n  data () {\r\n    return {\r\n      graph: null,\r\n      editor: null,\r\n      palettes: {},\r\n      graphXml: '',\r\n      activeNames: ['1', '2', '3'],\r\n      isNode: false,\r\n      cellStyle: \"\",\r\n      graphX: 100,\r\n      graphY: 10,\r\n      undoMng: \"\",\r\n      isOutputXml: false,\r\n      edgeStyle: 'orthogonalEdgeStyle',\r\n      outline: \"\",\r\n      idSeed: 0,\r\n      normalIdSeed: 0,\r\n      // configOrder: 0,\r\n      currentNormalType: {},\r\n      normalTypePosition: {\r\n        top: '0',\r\n        left: '0',\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    createGraph () {\r\n      this.editor = new MxEditor()\r\n      this.graph = this.editor.graph\r\n      this.editor.setGraphContainer(this.$refs.container);\r\n      // 配置默认全局样式\r\n      this.configureStylesheet(this.graph);\r\n      // 去锯齿效果\r\n      MxRectangleShape.prototype.crisp = true;\r\n      // 定义全局变量，如。用于触发建立新的连接的活动区域的最小尺寸（以像素为单位），该部分（100％）的小区区域被用于触发新的连接，以及一些窗口和“下拉菜菜单选择\r\n      MxConstants.MIN_HOTSPOT_SIZE = 16;\r\n      MxConstants.DEFAULT_HOTSPOT = 1;\r\n\r\n      //cell创建支持传入html\r\n      this.graph.setHtmlLabels(true);\r\n\r\n      // 禁用分组的收缩功能 方法1:\r\n      // this.graph.isCellFoldable = (cell) => {\r\n      //   return false\r\n      // }\r\n\r\n      // 禁用分组的收缩功能 方法2:\r\n      this.graph.foldingEnabled = false;\r\n\r\n      // 显示中心端口图标\r\n      this.graph.connectionHandler.targetConnectImage = false;\r\n\r\n      // 禁止连接线晃动(即连线两端必须在节点上)\r\n      this.graph.setAllowDanglingEdges(true);\r\n\r\n      // 设置默认组\r\n      // groupBorderSize 设置图形和它的子元素的边距\r\n      var group = new MxCell('Group', new MxGeometry(), 'group;fontColor=white;');\r\n      group.setVertex(false);\r\n      // 设置组可连接\r\n      group.setConnectable(false);\r\n      this.editor.defaultGroup = group;\r\n      this.editor.groupBorderSize = 40;\r\n      // 返回元素\r\n      this.graph.getLabel = function (cell) {\r\n        var tmp = MxGraph.prototype.getLabel.apply(this, arguments); // \"supercall\"\r\n        if (this.isCellLocked(cell)) {\r\n          // 如元素被锁定 返回空标签\r\n          return '';\r\n        }\r\n        else if (this.isCellCollapsed(cell)) {\r\n          var index = tmp.indexOf('</h1>');\r\n          if (index > 0) {\r\n            tmp = tmp.substring(0, index + 5);\r\n          }\r\n        }\r\n        return tmp;\r\n      }\r\n\r\n      // 目标是否有效\r\n      this.graph.isValidDropTarget = function (cell, cells, evt) {\r\n        console.log(cell, cells, evt)\r\n        return this.isSwimlane(cell);\r\n      };\r\n\r\n      // 是否根元素\r\n      this.graph.isValidRoot = function (cell) {\r\n        return this.isValidDropTarget(cell);\r\n      }\r\n\r\n      // 是否可以被选中\r\n      this.graph.isCellSelectable = function () {\r\n        return false\r\n      };\r\n\r\n      // 禁用HTML的泳道标签，避免冲突\r\n      // 判断是否为泳道标签\r\n      this.graph.isHtmlLabel = function (cell) {\r\n        return !this.isSwimlane(cell);\r\n      }\r\n\r\n    },\r\n    // 初始化画布\r\n    initGraph () {\r\n      if ((this.graph) == null || (this.graph) == undefined) {\r\n        return\r\n      }\r\n      this.graph.convertValueToString = (cell) => {\r\n        // 从value中获取显示的内容\r\n        return cell['value'] ? cell['value'] : cell['title']\r\n      }\r\n      // 创建缩略图\r\n      // this.outline = new mxOutline(this.graph, this.$refs.styleSelect.$refs.showMap);\r\n    },\r\n\r\n    showNormalTypeSelect (sender, evt) {\r\n      let cell = evt.properties.cell.state.cell;\r\n      this.currentNormalType = cell\r\n\r\n    },\r\n\r\n\r\n    // 基础配置函数\r\n    configOption () {\r\n      // 给graph添加事件\r\n      this.graph.addMouseListener(\r\n        {\r\n          currentState: null,\r\n          previousStyle: null,\r\n\r\n          mouseDown: (sender, evt) => {\r\n            if (!evt.state) {\r\n              console.log('点击了画布')\r\n              return;\r\n            } else if (evt.state.cell.edge) {\r\n              console.log('点击了连线')\r\n              return;\r\n            }\r\n\r\n            const cell = evt.state.cell;\r\n            let clickNormalType = false;\r\n            if (cell.style !== undefined) {\r\n              clickNormalType = cell.style.includes('normalType');\r\n            }\r\n            if (clickNormalType) {\r\n              // 使用 MxGraph 事件中心，触发自定义事件\r\n              this.graph.fireEvent(new MxEventObject(MxEvent.NORMAL_TYPE_CLICKED, 'cell', evt));\r\n            } else {\r\n              return\r\n            }\r\n          },\r\n\r\n          mouseMove: (sender, me) => {\r\n            // console.log('mouseMove')\r\n            this.graphX = Math.ceil(me.graphX);\r\n            this.graphY = me.graphY;\r\n          },\r\n\r\n          mouseUp: (sender, evt) => {\r\n            console.log(\"mouseUp\")\r\n            if (evt.sourceState == undefined) {\r\n              return;\r\n            } else {\r\n              var cell = evt.sourceState.cell;\r\n              //  var cell = this.graph.getSelectionCell();\r\n              if (cell) {\r\n                cell.vertex ? this.isNode = true : this.isNode = false\r\n                var getcellStyle = cell.getStyle() ? cell.getStyle() : null;\r\n                if (!this.isNode) {\r\n                  getcellStyle ? this.edgeStyle = getcellStyle : 'orthogonalEdgeStyle'\r\n                }\r\n                console.log(cell)\r\n                if (getcellStyle) {\r\n                  var arr = getcellStyle.split(\";\")\r\n                  // arr.pop()\r\n                  var styleObject = {}\r\n                  arr.forEach((item => {\r\n                    styleObject[item.split(\"=\")[0]] = item.split(\"=\")[1]\r\n                  }))\r\n                  this.cellStyle = styleObject\r\n                  // if (this.isNode) {\r\n\r\n                  // }\r\n                }\r\n              } else {\r\n                this.$message.error(\"请选择节点或者连线\")\r\n              }\r\n            }\r\n          },\r\n        });\r\n      // 监听自定义事件\r\n      this.graph.addListener(MxEvent.NORMAL_TYPE_CLICKED, this.showNormalTypeSelect);\r\n\r\n      this.graph.setResizeContainer(false);\r\n      // 禁用浏览器默认的右键菜单栏 \r\n      MxEvent.disableContextMenu(this.$refs.container)\r\n\r\n      // 自定义右键菜单栏\r\n      this.graph.popupMenuHandler.factoryMethod = (menu) => {\r\n        menu.addItem('输出所有节点', null, () => {\r\n          Object.values(this.graph.getModel().cells).forEach((cell) => {\r\n            console.log(cell)\r\n          })\r\n        })\r\n      }\r\n      // 启用工具提示，新连接平滑移动  \r\n      this.graph.setPanning(true);\r\n\r\n      // 开启提示\r\n      this.graph.setTooltips(false);\r\n      // 允许连线\r\n      this.graph.setConnectable(false)\r\n\r\n      // 开启方块上的文字编辑功能\r\n      this.graph.setCellsEditable(false)\r\n\r\n      // 禁止改变元素大小\r\n      this.graph.setCellsResizable(false);\r\n      // 是否缩放网格\r\n      MxGraphHandler.prototype.scaleGrid = false;\r\n\r\n      // 启用导航线帮助定位\r\n      MxGraphHandler.prototype.guidesEnabled = false;\r\n      // Alt 按下禁用导航线\r\n      MxGraphHandler.prototype.useGuidesForEvent = function (me) {\r\n        return !MxEvent.isAltDown(me.getEvent());\r\n      };\r\n\r\n      // 选择基本元素开启\r\n      this.graph.setEnabled(false);\r\n    },\r\n\r\n    //  配置全局样式\r\n    configureStylesheet (graph) {\r\n      // 设置节点的文字可被移动\r\n      graph.vertexLabelsMovable = false;\r\n      // 设置鼠标悬浮至节点或者连线时高亮显示的颜色\r\n      new MxCellTracker(graph, '#409eff');\r\n      var style = new Object();\r\n      style[MxConstants.STYLE_SHAPE] = MxConstants.SHAPE_LABEL;\r\n      style[MxConstants.STYLE_PERIMETER] = MxPerimeter.RectanglePerimeter;\r\n      style[MxConstants.STYLE_VERTICAL_ALIGN] = MxConstants.ALIGN_CENTER;\r\n      style[MxConstants.STYLE_ALIGN] = MxConstants.ALIGN_CENTER;\r\n      style[MxConstants.STYLE_IMAGE_ALIGN] = MxConstants.ALIGN_CENTER;\r\n      style[MxConstants.STYLE_IMAGE_VERTICAL_ALIGN] = MxConstants.ALIGN_CENTER;\r\n      // style[MxConstants.STYLE_SPACING_TOP] = 6;\r\n      style[MxConstants.STYLE_SPACING_LEFT] = 5;\r\n      // style[MxConstants.STYLE_GRADIENTCOLOR] = 'skyblue'; // 渐变颜色\r\n      style[MxConstants.STYLE_STROKECOLOR] = '#5d65df';   // 线条颜色\r\n      style[MxConstants.STYLE_FILLCOLOR] = '#FFFFFF';\r\n      style[MxConstants.STYLE_FONTCOLOR] = '#1d258f';     // 字体颜色\r\n      style[MxConstants.STYLE_FONTFAMILY] = 'Verdana';    // 字体风格\r\n      style[MxConstants.STYLE_FONTSIZE] = '12';           // 字体大小\r\n      style[MxConstants.STYLE_FONTSTYLE] = '0';           // 斜体字\r\n      style[MxConstants.STYLE_ROUNDED] = false;             // 圆角\r\n      style[MxConstants.STYLE_IMAGE_WIDTH] = '28';        // 图片宽度\r\n      style[MxConstants.STYLE_IMAGE_HEIGHT] = '28';       // 图片高度\r\n      style[MxConstants.STYLE_OPACITY] = '100';            // 节点透明度(不包含字体)\r\n      graph.getStylesheet().putDefaultVertexStyle(style);\r\n\r\n      style = new Object();\r\n      style[MxConstants.STYLE_SHAPE] = MxConstants.SHAPE_SWIMLANE;\r\n      style[MxConstants.STYLE_PERIMETER] = MxPerimeter.RectanglePerimeter;\r\n      style[MxConstants.STYLE_ALIGN] = MxConstants.ALIGN_CENTER;\r\n      style[MxConstants.STYLE_VERTICAL_ALIGN] = MxConstants.ALIGN_TOP;\r\n      style[MxConstants.STYLE_FILLCOLOR] = '#409eff';\r\n      // style[MxConstants.STYLE_GRADIENTCOLOR] = '#409eff';\r\n      style[MxConstants.STYLE_STROKECOLOR] = '#409eff';\r\n      style[MxConstants.STYLE_FONTCOLOR] = '#000000';\r\n      style[MxConstants.STYLE_ROUNDED] = false;\r\n      style[MxConstants.STYLE_OPACITY] = '80';\r\n      style[MxConstants.STYLE_STARTSIZE] = '30';\r\n      style[MxConstants.STYLE_FONTSIZE] = '16';\r\n      style[MxConstants.STYLE_FONTSTYLE] = 1;\r\n      graph.getStylesheet().putCellStyle('group', style);\r\n\r\n      style = new Object();\r\n      style[MxConstants.STYLE_SHAPE] = MxConstants.SHAPE_IMAGE;\r\n      style[MxConstants.STYLE_FONTCOLOR] = '#774400';\r\n      style[MxConstants.STYLE_PERIMETER] = MxPerimeter.RectanglePerimeter;\r\n      style[MxConstants.STYLE_PERIMETER_SPACING] = '6';\r\n      style[MxConstants.STYLE_ALIGN] = MxConstants.ALIGN_LEFT;\r\n      style[MxConstants.STYLE_VERTICAL_ALIGN] = MxConstants.ALIGN_MIDDLE;\r\n      style[MxConstants.STYLE_FONTSIZE] = '10';\r\n      style[MxConstants.STYLE_FONTSTYLE] = 2;\r\n      style[MxConstants.STYLE_IMAGE_WIDTH] = '16';\r\n      style[MxConstants.STYLE_IMAGE_HEIGHT] = '16';\r\n      style[MxConstants.STYLE_BACKGROUNDCOLOR] = 'transparent';\r\n      graph.getStylesheet().putCellStyle('port', style);\r\n\r\n\r\n      style = graph.getStylesheet().getDefaultEdgeStyle();\r\n      style[MxConstants.STYLE_LABEL_BACKGROUNDCOLOR] = '#FFFFFF';\r\n      style[MxConstants.STYLE_STROKEWIDTH] = '2';\r\n      style[MxConstants.STYLE_ROUNDED] = false;\r\n      // 获取全局Edge、label样式\r\n      var edgeStyle = this.graph.getStylesheet().getDefaultEdgeStyle()\r\n      // let labelStyle = this.graph.getStylesheet().getDefaultVertexStyle();\r\n      // 设置连线风格(设置为正交折线)\r\n      edgeStyle['edgeStyle'] = 'orthogonalEdgeStyle';\r\n\r\n      // 选中 cell/edge 后的伸缩大小的点/拖动连线位置的点的颜色\r\n      MxConstants.STYLE_WHITE_SPACE = 'wrap';\r\n      MxConstants.HANDLE_FILLCOLOR = '#99ccff'\r\n      MxConstants.HANDLE_STROKECOLOR = '#0088cf'\r\n      MxConstants.STYLE_ANCHOR_POINT_DIRECTION = 'anchorPointDirection'\r\n      MxConstants.STYLE_STYLE_ROTATION = 'rotation';\r\n    },\r\n\r\n    // 放大\r\n    zoomIn () {\r\n      this.graph.zoomIn()\r\n    },\r\n\r\n    // 缩小\r\n    zoomOut () {\r\n      this.graph.zoomOut()\r\n    },\r\n\r\n    // 等比例缩放\r\n    autoSize () {\r\n      this.editor.execute('actualSize')\r\n      // this.graph.fit();//自适应\r\n      // this.graph.center(true, true, 0.5, 0.5);//将画布放到容器中间\r\n      // // var sc = graph.getView().getScale();//获取当前的缩放比例\r\n      // // this.graph.zoomTo(Math.round(sc / 6));//在缩放一半，否则是满屏状态，不好看\r\n    },\r\n\r\n    // 生成图片\r\n    showImage () {\r\n      this.editor.execute('show');//直接页面跳转,并以svg流程图\r\n    },\r\n\r\n\r\n    // 导入xml文件后更新视图\r\n    uploadPaintFlow (newvalue) {\r\n      this.graph.selectAll()\r\n      this.graph.removeCells(this.graph.getSelectionCells())\r\n      setTimeout(() => {\r\n        this.decode(newvalue, this.graph)\r\n        this.$message.success(\"渲染成功\")\r\n      }, 1000)\r\n    },\r\n\r\n    createXmlDom (str) {\r\n      if (document.all) { //判断浏览器是否是IE\r\n        var xmlDom = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n        xmlDom.loadXML(str);\r\n        return xmlDom;\r\n      } else {\r\n        return (new DOMParser()).parseFromString(str, \"text/xml\");\r\n      }\r\n    },\r\n\r\n    // 渲染xml流程图\r\n    decode (graphXml, graph) {\r\n      this.graph.getModel().beginUpdate();\r\n      try {\r\n        // 渲染流程图 方法一:\r\n        // const xmlDocument = MxUtils.parseXml(graphXml)\r\n        // const decoder = new MxCodec(xmlDocument)\r\n        // decoder.decode(xmlDocument.documentElement, graph.getModel())\r\n        // 渲染流程图 方法二:\r\n        var xmlDoc = this.createXmlDom(graphXml);\r\n        var node = xmlDoc.documentElement;\r\n        var dec = new MxCodec(node.ownerDocument);\r\n        dec.decode(node, graph.getModel());\r\n      } finally {\r\n        this.graph.getModel().endUpdate()\r\n      }\r\n    },\r\n\r\n    // 导出xml文件\r\n    outPutXml () {\r\n      this.isOutputXml = true;\r\n      this.graphXml = this.encode(this.graph)\r\n    },\r\n\r\n    // 导出xml数据\r\n    encode (graph) {\r\n      const encoder = new MxCodec()\r\n      const result = encoder.encode(graph.getModel())\r\n      return MxUtils.getPrettyXml(result)\r\n    },\r\n    // 加载案例流程图\r\n    loadFlowCase (index) {\r\n\r\n      let loadData = \"\";\r\n      switch (index) {\r\n        case 1: loadData = xmlData1; break\r\n        case 2: loadData = xmlData2; break\r\n        case 3: loadData = xmlData3; break\r\n      }\r\n      let newXml = MxUtils.load(loadData).request.response\r\n      this.graph.selectAll()\r\n      this.graph.removeCells(this.graph.getSelectionCells())\r\n      setTimeout(() => {\r\n        this.decode(newXml, this.graph)\r\n\r\n        this.$message.success(\"加载流程图案例成功\")\r\n      }, 1000)\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    // 检测浏览器兼容性\r\n    if (!MxClient.isBrowserSupported()) {\r\n      this.$message.error('当前浏览器不支持拓扑图功能，请更换浏览器访问，建议使用Chrome浏览器访问!');\r\n    }\r\n    else {\r\n      // Overridden to define per-shape connection points\r\n      MxGraph.prototype.getAllConnectionConstraints = function (terminal) {\r\n        if (terminal != null && terminal.shape != null) {\r\n          if (terminal.shape.stencil != null) {\r\n            if (terminal.shape.stencil.constraints != null) {\r\n              return terminal.shape.stencil.constraints;\r\n            }\r\n          }\r\n          else if (terminal.shape.constraints != null) {\r\n            return terminal.shape.constraints;\r\n          }\r\n        }\r\n        return null;\r\n      };\r\n      this.createGraph()\r\n      this.initGraph()\r\n      this.configOption()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.customToolbarContainer {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  .toolbarContainer {\r\n    padding-top: 50px;\r\n    font-size: 20px;\r\n    background: #efefef;\r\n    text-align: center;\r\n    background-color: #fff;\r\n    border-right: 1px solid #ededed;\r\n    width: 15%;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    overflow-y: scroll;\r\n    .general-toolbar {\r\n      .el-collapse-item__wrap .el-collapse-item__content {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-around;\r\n        align-content: space-around;\r\n        .common {\r\n          width: 30%;\r\n          cursor: pointer;\r\n          // padding: 10px;\r\n          height: 50px;\r\n          white-space: wrap;\r\n          text-align: center;\r\n          position: relative;\r\n          .generalTooltitle {\r\n            position: absolute;\r\n            bottom: -10px;\r\n            left: 0;\r\n            width: 100%;\r\n            // transform: translateX(-50%);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .custom-toolbar {\r\n      .el-collapse-item__content {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-around;\r\n        align-content: space-around;\r\n        span {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .toolbarContainer::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  .graphContainer {\r\n    margin-top: 50px;\r\n    height: 100% !important;\r\n    line-height: 100%;\r\n    position: relative;\r\n    overflow: hidden;\r\n    background-color: #fff !important;\r\n    flex: 1;\r\n    background-image: url(\"../../assets/grid.gif\");\r\n  }\r\n  .top-tools {\r\n    position: absolute;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 0 20px 0 20px;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    background-color: #fff;\r\n    height: 50px;\r\n    // border-bottom: 1px solid #ededed;\r\n    box-shadow: 0px 2px 8px -4px #c4c7c1;\r\n    .select-edgetype {\r\n      width: 100px;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  .el-collapse-item__header {\r\n    padding-left: 30px;\r\n  }\r\n  .style-select {\r\n    width: 20%;\r\n    background-color: #fff;\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    border-left: 1px solid #ededed;\r\n    padding-top: 50px;\r\n    box-sizing: border-box;\r\n  }\r\n  .tools-group {\r\n    display: flex;\r\n    justify-content: center;\r\n    button {\r\n      margin-left: 22px;\r\n    }\r\n  }\r\n  .aside-button-group {\r\n    width: 100%;\r\n    position: sticky;\r\n    top: 0px;\r\n    background: #ffffff;\r\n    box-sizing: border-box;\r\n    z-index: 1000;\r\n    border: 1px solid #ededed;\r\n    border-left: none;\r\n  }\r\n}\r\n\r\ntable.mxPopupMenu {\r\n  background: #fff;\r\n  cursor: pointer;\r\n  border: 1px solid #ededed;\r\n  padding: 5px;\r\n}\r\n\r\ndiv.mxPopupMenu {\r\n  position: absolute;\r\n}\r\n.shapgroud {\r\n  .el-collapse-item__content {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  svg g path {\r\n    fill: transparent;\r\n  }\r\n}\r\n.flow {\r\n  stroke-dasharray: 8;\r\n  animation: dash 0.5s linear;\r\n  animation-iteration-count: infinite;\r\n}\r\n@keyframes dash {\r\n  to {\r\n    stroke-dashoffset: -16;\r\n  }\r\n}\r\n</style>\r\n"]}]}