{"remainingRequest":"C:\\Users\\Edward\\Desktop\\editor\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Edward\\Desktop\\editor\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Edward\\Desktop\\editor\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Edward\\Desktop\\editor\\src\\views\\customToolbar\\customToolbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Edward\\Desktop\\editor\\src\\views\\customToolbar\\customToolbar.vue","mtime":1691516402000},{"path":"C:\\Users\\Edward\\Desktop\\editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499187700000},{"path":"C:\\Users\\Edward\\Desktop\\editor\\node_modules\\babel-loader\\lib\\index.js","mtime":499187700000},{"path":"C:\\Users\\Edward\\Desktop\\editor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499187700000},{"path":"C:\\Users\\Edward\\Desktop\\editor\\node_modules\\vue-loader\\lib\\index.js","mtime":499187700000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["customToolbar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"customToolbarContainer\">\r\n    <!-- 左侧节点/放大缩小工具 菜单 -->\r\n    <div class=\"toolbarContainer\">\r\n      <div class=\"aside-button-group\">\r\n        <el-button-group style=\"margin: 10px 0\">\r\n          <el-tooltip\r\n            class=\"item\"\r\n            effect=\"dark\"\r\n            content=\"放大\"\r\n            placement=\"bottom\"\r\n          >\r\n            <el-button icon=\"el-icon-zoom-in\" @click=\"zoomIn\"></el-button>\r\n          </el-tooltip>\r\n          <el-tooltip\r\n            class=\"item\"\r\n            effect=\"dark\"\r\n            content=\"缩小\"\r\n            placement=\"bottom\"\r\n          >\r\n            <el-button icon=\"el-icon-zoom-out\" @click=\"zoomOut\"></el-button>\r\n          </el-tooltip>\r\n          <el-tooltip\r\n            class=\"item\"\r\n            effect=\"dark\"\r\n            content=\"等比缩放\"\r\n            placement=\"bottom\"\r\n          >\r\n            <el-button\r\n              @click=\"autoSize\"\r\n              icon=\"iconfont icon-expandalt-fill\"\r\n            ></el-button>\r\n          </el-tooltip>\r\n        </el-button-group>\r\n      </div>\r\n      <!-- 节点样板菜单 -->\r\n      <el-collapse v-model=\"activeNames\">\r\n        <el-collapse-item name=\"1\" class=\"general-toolbar\">\r\n          <!-- 基础节点图标 -->\r\n          <template slot=\"title\" class=\"collaspetitle\">Base node</template>\r\n          <span\r\n            v-for=\"item in generalToolbarItems\"\r\n            :style=\"item['style']\"\r\n            :class=\"item['class']\"\r\n            :key=\"item['index']\"\r\n            ref=\"generalToolItems\"\r\n          >\r\n            <span class=\"generalTooltitle\">{{ item[\"text\"] }}</span>\r\n          </span>\r\n        </el-collapse-item>\r\n<!--        <el-collapse-item name=\"2\" class=\"custom-toolbar\">-->\r\n<!--          &lt;!&ndash; 自定义图标 &ndash;&gt;-->\r\n<!--          <template slot=\"title\" class=\"collaspetitle\">自定义节点</template>-->\r\n<!--          <span-->\r\n<!--            v-for=\"item in toolbarItems\"-->\r\n<!--            style-->\r\n<!--            :class=\"{ 'rectangle-node': item['nodeType'] === 'rectangle' }\"-->\r\n<!--            class=\"custom-node\"-->\r\n<!--            :key=\"item['title']\"-->\r\n<!--            ref=\"toolItem\"-->\r\n<!--          >-->\r\n<!--            <img style :src=\"item['icon']\" />-->\r\n<!--            <br />-->\r\n<!--            <span class=\"node-title\">{{ item[\"title\"] }}</span>-->\r\n<!--          </span>-->\r\n<!--        </el-collapse-item>-->\r\n        <!-- 箭头模板图标 -->\r\n        <el-collapse-item\r\n          v-for=\"(palette, paletteIndex) in Object.values(palettes)\"\r\n          :title=\"palette['title']\"\r\n          :key=\"paletteIndex\"\r\n          name=\"3\"\r\n          class=\"shapgroud\"\r\n        >\r\n          <!-- 图标 -->\r\n          <a\r\n            v-for=\"(_, shapeIndex) in palette['shapes']\"\r\n            :shapeIndex=\"shapeIndex\"\r\n            :paletteIndex=\"paletteIndex\"\r\n            ref=\"stencilDragItem\"\r\n            class=\"stencil-node\"\r\n            :key=\"shapeIndex\"\r\n          ></a>\r\n        </el-collapse-item>\r\n        <!--分组图标 -->\r\n<!--        <el-collapse-item title=\"组元素\" name=\"4\">-->\r\n<!--          <ul>-->\r\n<!--            <li-->\r\n<!--              v-for=\"(item, index) in grouptoolItems\"-->\r\n<!--              :key=\"index\"-->\r\n<!--              class=\"group-item\"-->\r\n<!--              ref=\"grouptoolItem\"-->\r\n<!--            >-->\r\n<!--              <b>{{ item.title }}</b>-->\r\n<!--            </li>-->\r\n<!--          </ul>-->\r\n<!--        </el-collapse-item>-->\r\n      </el-collapse>\r\n    </div>\r\n    <!-- 画布的顶部工具栏 -->\r\n    <div class=\"top-tools\">\r\n      <el-col :span=\"4\">\r\n        <div\r\n          class=\"grid-content bg-purple\"\r\n          style=\"\r\n            color: rgb(64, 158, 255);\r\n            font-weight: 800;\r\n            font-size: 22px;\r\n            margin-left: 44px;\r\n          \"\r\n        >\r\n\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"12\" class=\"tools-group\">\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"组合\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            icon=\"iconfont icon-zuhe\"-->\r\n<!--            @click=\"enGroup\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"导入xml文件\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            icon=\"iconfont icon-fileplus-fill\"-->\r\n<!--            @click=\"inPutXml\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"导出xml文件\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            icon=\"iconfont icon-xmloutput\"-->\r\n<!--            @click=\"outPutXml\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          v-if=\"showBackground\"\r\n          content=\"Hidden grid background\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            type=\"text\"\r\n            icon=\"iconfont icon-dituleiwanggequ-copy\"\r\n            @click=\"showBackground = false\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n        <el-tooltip\r\n          v-else\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"显示网格背景\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            type=\"text\"\r\n            icon=\"iconfont icon-fangxingweixuanzhong-copy\"\r\n            @click=\"showBackground = true\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"导出为图片\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            icon=\"iconfont icon-tupian\"-->\r\n<!--            @click=\"showImage\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"环形布局\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            @click=\"graphLayout(true, 'circleLayout')\"-->\r\n<!--            type=\"text\"-->\r\n<!--            icon=\"el-icon-stopwatch\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"树形布局\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            @click=\"graphLayout(true, 'compactTreeLayout')\"-->\r\n<!--            icon=\"iconfont icon-Directory-tree\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"随机布局\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            @click=\"graphLayout(true, 'randomLayout')\"-->\r\n<!--            icon=\"el-icon-c-scale-to-original\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n<!--        <el-tooltip-->\r\n<!--          class=\"item\"-->\r\n<!--          effect=\"dark\"-->\r\n<!--          content=\"分层布局\"-->\r\n<!--          placement=\"bottom\"-->\r\n<!--        >-->\r\n<!--          <el-button-->\r\n<!--            type=\"text\"-->\r\n<!--            @click=\"graphLayout(true, 'hierarchicalLayout')\"-->\r\n<!--            icon=\"el-icon-files\"-->\r\n<!--          ></el-button>-->\r\n<!--        </el-tooltip>-->\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"cancel\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            type=\"text\"\r\n            icon=\"iconfont icon-reply\"\r\n            @click=\"goBack\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"advance\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            type=\"text\"\r\n            icon=\"iconfont icon-share\"\r\n            @click=\"goForward\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n        <el-tooltip\r\n          class=\"item\"\r\n          effect=\"dark\"\r\n          content=\"delete\"\r\n          placement=\"bottom\"\r\n        >\r\n          <el-button\r\n            type=\"text\"\r\n            icon=\"el-icon-delete-solid\"\r\n            @click=\"deleteNode\"\r\n          ></el-button>\r\n        </el-tooltip>\r\n      </el-col>\r\n<!--      <el-col :span=\"8\">-->\r\n<!--        <div-->\r\n<!--          class=\"grid-content bg-purple\"-->\r\n<!--          style=\"display: flex; justify-content: flex-end; padding-right: 20px\"-->\r\n<!--        >-->\r\n<!--          <el-button round size=\"medium\" @click=\"loadFlowCase(1)\"-->\r\n<!--            >化工流程案例</el-button-->\r\n<!--          >-->\r\n<!--          <el-button round size=\"medium\" @click=\"loadFlowCase(2)\"-->\r\n<!--            >组件管理案例</el-button-->\r\n<!--          >-->\r\n<!--          <el-button round size=\"medium\" @click=\"loadFlowCase(3)\"-->\r\n<!--            >Vue生命周期案例</el-button-->\r\n<!--          >-->\r\n<!--        </div>-->\r\n<!--      </el-col>-->\r\n    </div>\r\n    <!-- 中心画布 -->\r\n    <div\r\n      class=\"graphContainer\"\r\n      id=\"graphContainer\"\r\n      ref=\"container\"\r\n      :class=\"{ 'graphContainer-background': showBackground }\"\r\n    ></div>\r\n    <!-- 右侧栏 -->\r\n    <div class=\"right-bar\">\r\n      <!-- 样式设置 -->\r\n      <style-select\r\n        @changeDashed=\"changeDashed\"\r\n        @changeStrokeColor=\"changeStrokeColor\"\r\n        @changeStrokeWidth=\"changeStrokeWidth\"\r\n        @changeFontSize=\"changeFontSize\"\r\n        @changeFontColor=\"changeFontColor\"\r\n        @changeLabelBackgroundColor=\"changeLabelBackgroundColor\"\r\n        @changeConfigOrder=\"changeConfigOrder\"\r\n        @changeFillColor=\"changeFillColor\"\r\n        @changeShadow=\"changeShadow\"\r\n        @changeFontStyle=\"changeFontStyle\"\r\n        @changeNodeimage=\"changeNodeimage\"\r\n        @edgeChange=\"edgeChange\"\r\n        @textValueChange=\"textValueChange\"\r\n        :textValue=\"textValue\"\r\n        :isNode=\"isNode\"\r\n        :cellStyle=\"cellStyle\"\r\n        :currentNormalType=\"currentNormalType\"\r\n        :graphX=\"graphX\"\r\n        :graphY=\"graphY\"\r\n        ref=\"styleSelect\"\r\n      />\r\n<!--      <div class=\"json-viewer\">-->\r\n<!--        <h4 style=\"text-align: center\">Json数据结构</h4>-->\r\n<!--        <json-viewer-->\r\n<!--          :value=\"jsonData\"-->\r\n<!--          style=\"height: 80%\"-->\r\n<!--          copyable-->\r\n<!--          sort-->\r\n<!--        ></json-viewer>-->\r\n<!--      </div>-->\r\n    </div>\r\n\r\n    <!-- XML数据导入/导出 -->\r\n<!--    <upload-data-->\r\n<!--      v-if=\"uploadDataVisible\"-->\r\n<!--      @uploadPaintFlow=\"uploadPaintFlow\"-->\r\n<!--      :graphXml=\"graphXml\"-->\r\n<!--      :isOutputXml=\"isOutputXml\"-->\r\n<!--    ></upload-data>-->\r\n  </div>\r\n</template>\r\n<script>\r\n// 导入自定义图标数组\r\nimport { generalToolbarItems } from \"./general-shape\"\r\nimport { toolbarItems } from './toolbar'\r\n// 组元素\r\nimport { grouptoolItems } from './GroupToolbarItems'\r\nimport * as R from \"ramda\";\r\nimport mx from 'mxgraph';\r\nimport _ from 'lodash';\r\nconst mxgraph = mx({})\r\nimport styleSelect from \"./component/styleSelect\";\r\nconst {\r\n  mxStencilRegistry,\r\n  mxStencil,\r\n  mxEvent,\r\n  mxGraph,\r\n  mxEditor,\r\n  mxUtils,\r\n  mxRubberband,\r\n  mxKeyHandler,\r\n  mxGraphHandler,\r\n  mxConstants,\r\n  mxImage,\r\n  mxCellState,\r\n  mxConnectionHandler,\r\n  mxCodec,\r\n  mxRectangleShape,\r\n  mxPoint,\r\n  mxClipboard,\r\n  mxCellTracker,\r\n  mxUndoManager,\r\n  mxClient,\r\n  mxEdgeHandler,\r\n  mxPerimeter,\r\n  mxOutline,\r\n  mxEventObject,\r\n  mxGeometry,\r\n  mxCell,\r\n  mxShape,\r\n  mxConstraintHandler,\r\n  mxEllipse,\r\n  // mxTriangle,\r\n  mxFastOrganicLayout,\r\n  mxHierarchicalLayout,\r\n  mxCompactTreeLayout,\r\n  mxMorphing,\r\n  mxCircleLayout,\r\n  mxSvgCanvas2D,\r\n  mxImageExport,\r\n  mxConnectionConstraint,\r\n  mxPolyline,\r\n  mxVertexHandler,\r\n  mxRectangle,\r\n  mxImageShape,\r\n  ActiveXObject,\r\n} = mxgraph;\r\nconst path = require('path');\r\n// 配置自定义事件\r\nObject.assign(mxEvent, {\r\n  NORMAL_TYPE_CLICKED: 'NORMAL_TYPE_CLICKED',\r\n});\r\n// 导入流程图案例数据\r\nconst xmlData1 = path.join('data/data1.xml');\r\nconst xmlData2 = path.join('data/data2.xml');\r\nconst xmlData3 = path.join('data/data3.xml');\r\nexport default {\r\n  computed: {\r\n    // 组元素\r\n    grouptoolItems: () => grouptoolItems,\r\n    toolbarItems: () => toolbarItems,\r\n    generalToolbarItems: () => generalToolbarItems,\r\n  },\r\n  components: {\r\n    styleSelect,\r\n  },\r\n  data () {\r\n    return {\r\n      graph: null,\r\n      editor: null,\r\n      palettes: {},\r\n      graphXml: '',\r\n      activeNames: ['1', '2', '3'],\r\n      isNode: false,\r\n      cellStyle: '',\r\n      graphX: 100,\r\n      graphY: 10,\r\n      undoMng: '',\r\n      textValue: '',\r\n      uploadDataVisible: false,\r\n      isOutputXml: false,\r\n      edgeStyle: 'orthogonalEdgeStyle',\r\n      outline: '',\r\n      idSeed: 0,\r\n      normalIdSeed: 0,\r\n      // configOrder: 0,\r\n      jsonData: {\r\n        cells: {\r\n          nodes: [],\r\n          groups: []\r\n        },\r\n        edges: []\r\n      },\r\n      showBackground: false,\r\n      currentNormalType: {},\r\n      normalTypePosition: {\r\n        top: '0',\r\n        left: '0',\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 创建画布并进行初始化\r\n    createGraph () {\r\n      // 创建graph\r\n      // 方式一：直接构建graph实例\r\n      // this.graph = new mxGraph(this.$refs.container)\r\n      this.editor = new mxEditor();\r\n      this.graph = this.editor.graph;\r\n      this.editor.setGraphContainer(this.$refs.container);\r\n      // 配置默认全局样式\r\n      this.configureStylesheet(this.graph);\r\n      // 去锯齿效果\r\n      mxRectangleShape.prototype.crisp = true;\r\n      // 定义全局变量，如。用于触发建立新的连接的活动区域的最小尺寸（以像素为单位），该部分（100％）的小区区域被用于触发新的连接，以及一些窗口和“下拉菜菜单选择\r\n      mxConstants.MIN_HOTSPOT_SIZE = 16;\r\n      mxConstants.DEFAULT_HOTSPOT = 1;\r\n\r\n      //cell创建支持传入html\r\n      this.graph.setHtmlLabels(true);\r\n      this.graph.setDropEnabled(true);\r\n      this.graph.setSplitEnabled(false);\r\n      // 有效的拖放操作，则返回true\r\n      this.graph.isValidDropTarget = (target, cells, evt) => {\r\n        if (this.graph.isSplitEnabled() && this.graph.isSplitTarget(target, cells, evt)) {\r\n          console.log('拖放');\r\n          return true;\r\n        }\r\n      };\r\n\r\n      // 禁用分组的收缩功能 方法1:\r\n      // this.graph.isCellFoldable = (cell) => {\r\n      //   return false\r\n      // }\r\n      // 禁用分组的收缩功能 方法2:\r\n      this.graph.foldingEnabled = false;\r\n      // 组内的子元素是否随父元素变化而变化\r\n      this.graph.recursiveResize = true;\r\n\r\n      // 设置连线时的预览路径及样式\r\n      this.graph.connectionHandler.createEdgeState = () => {\r\n        // 设置预览的连接线,第三个参数为连接成功后连接线上的label\r\n        var edge = this.graph.createEdge(null, null, null, null, null);\r\n        // edge.style += `;edgeStyle=orthogonalEdgeStyle `\r\n        return new mxCellState(this.graph.view, edge, this.graph.getCellStyle(edge));\r\n      };\r\n\r\n      // 是否开启旋转\r\n      mxVertexHandler.prototype.livePreview = true;\r\n      mxVertexHandler.prototype.rotationEnabled = true;\r\n      // 设置旋转按钮\r\n      mxVertexHandler.prototype.createSizerShape = function (bounds, index, fillColor) {\r\n        if (this.handleImage != null) {\r\n          bounds = new mxRectangle(bounds.x, bounds.y, this.handleImage.width, this.handleImage.height);\r\n          let shape = new mxImageShape(bounds, this.handleImage.src);\r\n          // Allows HTML rendering of the images\r\n          shape.preserveImageAspect = true;\r\n          return shape;\r\n        } else if (index == mxEvent.ROTATION_HANDLE) {\r\n          // return new mxDoubleEllipse(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\r\n          // 设置旋转图标\r\n          bounds = new mxRectangle(bounds.x, bounds.y, 15, 15);\r\n          let rotationShape = new mxImageShape(bounds, 'icon/rotate.svg');\r\n          rotationShape.preserveImageAspect = true;\r\n          return rotationShape;\r\n        } else {\r\n          return new mxRectangleShape(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\r\n        }\r\n      };\r\n      // 设置旋转角度（解决默认旋转180度的bug）\r\n      mxVertexHandler.prototype.getRotationHandlePosition = function () {\r\n        let padding = this.getHandlePadding();\r\n        return new mxPoint(this.bounds.x + this.bounds.width - this.rotationHandleVSpacing + padding.x / 2, this.bounds.y + this.rotationHandleVSpacing - padding.y / 2);\r\n      };\r\n      // 设置默认组\r\n      // groupBorderSize 设置图形和它的子元素的边距\r\n      let group = new mxCell('Group', new mxGeometry(), 'group;fontColor=white;');\r\n      group.setVertex(true);\r\n      // 设置组可连接\r\n      group.setConnectable(true);\r\n      // group.setCellsResizable(false);\r\n      this.editor.defaultGroup = group;\r\n      this.editor.groupBorderSize = 80;\r\n\r\n      // 是否根元素\r\n      this.graph.isValidRoot = function (cell) {\r\n        return this.isValidDropTarget(cell);\r\n      };\r\n\r\n      // // 是否可以被选中\r\n      // this.graph.isCellSelectable = function (cell) {\r\n      //   return !this.isCellLocked(cell);\r\n      // };\r\n\r\n      // 返回元素\r\n      this.graph.getLabel = function (cell) {\r\n        var tmp = mxGraph.prototype.getLabel.apply(this, arguments); // \"supercall\"\r\n        if (this.isCellLocked(cell)) {\r\n          // 如元素被锁定 返回空标签\r\n          return '';\r\n        } else if (this.isCellCollapsed(cell)) {\r\n          var index = tmp.indexOf('</h1>');\r\n          if (index > 0) {\r\n            tmp = tmp.substring(0, index + 5);\r\n          }\r\n        }\r\n        return tmp;\r\n      };\r\n\r\n      // 目标是否有效\r\n      this.graph.isValidDropTarget = function (cell) {\r\n        // console.log(cell, cells, evt);\r\n        return this.isSwimlane(cell);\r\n      };\r\n\r\n      // 是否根元素\r\n      this.graph.isValidRoot = function (cell) {\r\n        return this.isValidDropTarget(cell);\r\n      };\r\n\r\n      // 是否可以被选中\r\n      this.graph.isCellSelectable(true)\r\n\r\n      // 允许重复连接\r\n      this.graph.setMultigraph(true);\r\n      // 禁止连接线晃动(即连线两端必须在节点上)\r\n      this.graph.setAllowDanglingEdges(false);\r\n      // 允许连线的目标和源是同一元素\r\n      this.graph.setAllowLoops(false);\r\n      //边被拖动时始终保持连接\r\n      this.graph.setDisconnectOnMove(false);\r\n      // 选择基本元素开启\r\n      this.graph.setEnabled(true);\r\n      // 动态改变样式\r\n      this.graph.getView().updateStyle = true;\r\n      // 鼠标框选\r\n      this.rubberBand = new mxRubberband(this.graph);\r\n      this.graph.setResizeContainer(true);\r\n\r\n      // 开启画布平滑移动\r\n      // this.graph.setPanning(true);\r\n      this.graph.setPanning = true;\r\n      // 开启提示\r\n      this.graph.setTooltips(false);\r\n      // 允许连线\r\n      this.graph.setConnectable(true);\r\n      //移动元素的步长\r\n      this.graph.gridSize = 3;\r\n      this.graph.setBorder(160);\r\n\r\n      // 开启方块上的文字编辑功能\r\n      this.graph.setCellsEditable(true);\r\n      // 禁止双击修改内容(弃用)\r\n      // this.graph.dblClick = (evt, cell) => {\r\n      //   var model = this.graph.getModel();\r\n      //   if (model.isVertex(cell)) {\r\n      //     return false;\r\n      //   }\r\n      // };\r\n      // Disables synchronous loading of resources\r\n      // 可用于禁用HTML的泳道标签，避免冲突(返回false即可)\r\n      // 判断是否为泳道标签\r\n      // this.graph.isHtmlLabel = function (cell) {\r\n      //   return this.isSwimlane(cell);\r\n      // };\r\n      //准备撤销还原功能\r\n      // 构造具有给定历史记录大小的新撤消管理器。默认100步\r\n      this.undoMng = new mxUndoManager();\r\n      let listener = (sender, evt) => {\r\n        this.undoMng.undoableEditHappened(evt.getProperty('edit'));\r\n\r\n      };\r\n      this.graph.getModel().addListener(mxEvent.UNDO, listener);\r\n      this.graph.getView().addListener(mxEvent.UNDO, listener);\r\n      // 创建缩略图\r\n      this.outline = new mxOutline(this.graph, this.$refs.styleSelect.$refs.showMap);\r\n      if ((this.graph) == null || (this.graph) == undefined) {\r\n        return;\r\n      }\r\n      // 从value中获取显示的内容(如果节点的value为空则显示节点的title)\r\n      this.graph.convertValueToString = (cell) => {\r\n        return cell['value'] ? cell['value'] : cell['title'];\r\n      };\r\n    },\r\n\r\n    // 新增自定义节点\r\n    addCustomCell (dropCell, toolItem, x, y) {\r\n      // 判断是否是放在组元素上\r\n      const drop = !R.isNil(dropCell);\r\n      // drop && this.$message.info(`${toolItem['title']}节点进入${dropCell.title}`);\r\n      const { width, height } = toolItem;\r\n      const styleObj = toolItem.style;\r\n      const style = Object.keys(styleObj).map((attr) => `${attr}=${styleObj[attr]}`).join(';');\r\n      const realX = drop ? x - dropCell.geometry.x : x;\r\n      const realY = drop ? y - dropCell.geometry.y : y;\r\n      const parent = drop ? dropCell : this.graph.getDefaultParent();\r\n      this.graph.getModel().beginUpdate();\r\n      try {\r\n        let vertex = this.graph.insertVertex(parent, null, null, realX - (width / 2), realY - (height / 2), width, height, style + ';whiteSpace=wrap;word-break=break-all');\r\n        vertex.title = toolItem['title'];\r\n        vertex.id = toolItem['id'] + '-' + toolItem['idSeed'];\r\n        // 添加完节点后自动添加顺序图标\r\n        this.addPoint(vertex, toolItem['idSeed']);\r\n        toolItem['idSeed']++;\r\n        vertex['isGroup'] = toolItem['id'].includes('group') ? true : false\r\n      } finally {\r\n        this.graph.getModel().endUpdate();\r\n      }\r\n    },\r\n    // 布局\r\n    graphLayout (animate, layoutType) {\r\n      this.graph.getModel().beginUpdate()\r\n      try {\r\n        if (layoutType === 'randomLayout') {\r\n          // 随机布局\r\n          mxFastOrganicLayout.prototype.minDistanceLimit = 100\r\n          // eslint-disable-next-line new-cap\r\n          var layout = new mxFastOrganicLayout(this.graph)\r\n          layout.forceConstant = 500\r\n          layout.execute(this.graph.getDefaultParent())\r\n        } else if (layoutType === 'hierarchicalLayout') {\r\n          // 分层布局\r\n          mxHierarchicalLayout.prototype.intraCellSpacing = 300\r\n          mxHierarchicalLayout.prototype.fineTuning = false\r\n          mxHierarchicalLayout.prototype.traverseAncestors = false\r\n          mxHierarchicalLayout.prototype.resizeParent = true\r\n          // 无关系实体之间的间距\r\n          mxHierarchicalLayout.prototype.interHierarchySpacing = 200\r\n          // 层级之间的距离\r\n          mxHierarchicalLayout.prototype.interRankCellSpacing = 800\r\n\r\n          // eslint-disable-next-line new-cap\r\n          var hierarchicallayout = new mxHierarchicalLayout(this.graph, mxConstants.DIRECTION_NORTH)\r\n          hierarchicallayout.execute(this.graph.getDefaultParent())\r\n        } else if (layoutType === 'compactTreeLayout') {\r\n          // 树形布局\r\n          // eslint-disable-next-line new-cap\r\n          var compactTreelayout = new mxCompactTreeLayout(this.graph)\r\n          compactTreelayout.execute(this.graph.getDefaultParent())\r\n        } else if (layoutType === 'circleLayout') {\r\n          // 圆形布局\r\n          // eslint-disable-next-line new-cap\r\n          var circleLayout = new mxCircleLayout(this.graph, 400)\r\n          circleLayout.execute(this.graph.getDefaultParent())\r\n        }\r\n      } finally {\r\n        // 是否开启布局动画\r\n        if (animate) {\r\n          // eslint-disable-next-line new-cap\r\n          var morph = new mxMorphing(this.graph, 20, 7.7, 40)\r\n          morph.addListener(mxEvent.DONE, () => {\r\n            this.graph.getModel().endUpdate()\r\n          })\r\n          morph.startAnimation()\r\n        } else {\r\n          this.graph.getModel().endUpdate()\r\n        }\r\n      }\r\n    },\r\n    // 初始化基础节点\r\n    initGeneralTool () {\r\n      var generalToolbarDomArray = this.$refs.generalToolItems;\r\n      // 判断是否为数组且数组是否为空\r\n      if (!(generalToolbarDomArray instanceof Array || generalToolbarDomArray.length <= 0)) {\r\n        return;\r\n      }\r\n      generalToolbarDomArray.forEach((dom, domIndex) => {\r\n        var toolItem = this.generalToolbarItems[domIndex];\r\n        var { width, height } = toolItem;\r\n        var itemClass = (toolItem.class);\r\n        //新增基础节点\r\n        var generalDropHandler = (graph, evt, dropCell, x, y) => {\r\n          const drop = !R.isNil(dropCell);\r\n          // drop && this.$message.info(`${toolItem['title']}节点进入${dropCell.title}`);\r\n          const realX = drop ? x - dropCell.geometry.x : x;\r\n          const realY = drop ? y - dropCell.geometry.y : y;\r\n          const { width, height } = toolItem;\r\n          const styleObj = toolItem.style;\r\n          const style = Object.keys(styleObj).map((attr) => `${attr}=${styleObj[attr]}`).join(';');\r\n          const parent = drop ? dropCell : this.graph.getDefaultParent();\r\n          this.graph.getModel().beginUpdate();\r\n          try {\r\n            let vertex = this.graph.insertVertex(parent, null, null, realX - (width / 2), realY - (height / 2), width, height, style + ';whiteSpace=wrap;word-break=break-all');\r\n            vertex.title = `<div style='word-break:break-all'>` + toolItem['title'] + '</div>';\r\n            vertex.dropAble = toolItem['dropAble'];\r\n            vertex.id = toolItem['id'] + '-' + toolItem['idSeed'];\r\n            toolItem['idSeed']++;\r\n            vertex['isGroup'] = toolItem['id'].includes('group') ? true : false\r\n\r\n          } finally {\r\n            this.graph.getModel().endUpdate();\r\n          }\r\n        };\r\n        // 设置节点被拖拽时的样式(预览)\r\n        var generalcreateDragPreview = () => {\r\n          var elt = document.createElement('div');\r\n          elt.style.width = `${width}px`;\r\n          elt.style.height = `${height}px`;\r\n          elt.style.transform = 'translate(-50%,-50%)';\r\n          elt.className = itemClass;\r\n          return elt;\r\n        };\r\n        // 允许拖拽\r\n        let ds = mxUtils.makeDraggable(dom, this.graph, generalDropHandler, generalcreateDragPreview(), 0, 0, true, true);\r\n        ds.setGuidesEnabled(true);\r\n      });\r\n    },\r\n\r\n    // 初始化自定义图标\r\n    initCustomToolbar () {\r\n      // 获取工具栏中的自定义节点的dom\r\n      var toolbarDomArray = this.$refs.toolItem;\r\n      if (!(toolbarDomArray instanceof Array) || toolbarDomArray.length <= 0) {\r\n        return;\r\n      }\r\n\r\n      toolbarDomArray.forEach((dom, domIndex) => {\r\n        var toolItem = this.toolbarItems[domIndex];\r\n        var { width, height } = toolItem;\r\n        var image = toolItem.style.image;\r\n        //定义拖拽后的回调函数\r\n        var dropHandler = (graph, evt, cell, x, y) => {\r\n          this.addCustomCell(cell, toolItem, x, y);\r\n        };\r\n        // 设置节点被拖拽时的样式(预览)\r\n        var createDragPreview = () => {\r\n          var elt = document.createElement('div');\r\n          elt.style.border = '2px dotted black';\r\n          elt.style.width = `${width}px`;\r\n          elt.style.height = `${height}px`;\r\n          elt.style.backgroundImage = `url(${image})`;\r\n          elt.style.backgroundSize = `contain`;\r\n          elt.style.transform = 'translate(-50%,-50%)';\r\n          elt.style.backgroundRepeat = 'no-repeat';\r\n          return elt;\r\n        };\r\n        // 允许拖拽\r\n        let ds = mxUtils.makeDraggable(dom, this.graph, dropHandler, createDragPreview(), 0, 0, false, true, true);\r\n        ds.setGuidesEnabled(true);\r\n      });\r\n    },\r\n    // 拖拽组元素\r\n    makeToolbarDraggable () {\r\n      const grouptoolItem = this.$refs.grouptoolItem;\r\n      if (!(grouptoolItem instanceof Array)) {\r\n        return;\r\n      }\r\n      grouptoolItem.forEach((item, index) => {\r\n        const toolItem = this.grouptoolItems[index];\r\n        const { height, width } = toolItem;\r\n        // 创建拖拽时的预览图形\r\n        const createDragPreview = () => {\r\n          const elt = document.createElement('div');\r\n          elt.style.border = '2px dotted black';\r\n          elt.style.width = `${width}px`;\r\n          elt.style.height = `${height}px`;\r\n          elt.style.transform = 'translate(-50%,-50%)';\r\n          elt.className = toolItem.class;\r\n          return elt;\r\n        };\r\n        // drop的处理函数\r\n        const dropHandler = (graph, evt, cell, x, y) => {\r\n          this.instanceCell(cell, toolItem, x, y);\r\n        };\r\n        // 获取拖放的对象\r\n        const getDropTarget = (graph, x, y) => {\r\n          const cell = graph.getCellAt(x, y);\r\n          return R.propOr(null, 'dropAble', cell) ? cell : null;\r\n        };\r\n        mxUtils.makeDraggable(item, this.graph, dropHandler, createDragPreview(index), 0, 0, false, true, true, getDropTarget);\r\n      });\r\n    },\r\n    // 新增组元素\r\n    instanceCell (dropCell, toolItem, x, y) {\r\n      const drop = !R.isNil(dropCell);\r\n      // drop && this.$message.info(`${toolItem['title']}节点入${dropCell.title}`);\r\n      const styleObj = toolItem['style'] || {};\r\n      const style = Object.keys(styleObj).map((key) => `${key}=${styleObj[key]}`).join(';');\r\n      const realX = drop ? x - dropCell.geometry.x : x;\r\n      const realY = drop ? y - dropCell.geometry.y : y;\r\n      const { height, width } = toolItem;\r\n      const parent = drop ? dropCell : this.graph.getDefaultParent();\r\n      const isHtml = Object.is('1', toolItem['style']['html']);\r\n      const tmpIndex = Date.now();\r\n      const value = isHtml ? toolItem['html'](tmpIndex) : null;\r\n      this.graph.getModel().beginUpdate();\r\n      try {\r\n        const vertex = this.graph.insertVertex(parent, null, value, realX - (width / 2), realY - (height / 2), width, height, style + ';whiteSpace=wrap;word-break=break-all');\r\n        vertex['title'] = toolItem['title'];\r\n        vertex['dropAble'] = toolItem['dropAble'];\r\n        vertex['id'] = toolItem['id'];\r\n        vertex['isGroup'] = toolItem['id'].includes('group') ? true : false\r\n        // 设置连接点\r\n        // cell['constraints'] = toolItem['constraints']\r\n        this.$nextTick(() => {\r\n          const createdCallback = toolItem['created'];\r\n          if (createdCallback instanceof Function) {\r\n            createdCallback(this.graph, vertex, tmpIndex);\r\n          }\r\n        });\r\n      } finally {\r\n        this.graph.getModel().endUpdate();\r\n      }\r\n    },\r\n\r\n    // 基础配置函数\r\n    eventCenter () {\r\n\r\n      // 给graph添加事件\r\n      // 监听自定义事件\r\n      this.graph.addListener(mxEvent.NORMAL_TYPE_CLICKED, (sender, evt) => {\r\n        let cell = evt.properties.cell.state.cell;\r\n        this.currentNormalType = cell;\r\n      });\r\n      // this.graph.addListener(mxEvent.VERTEX_START_MOVE, (sender, evt) => {\r\n      //   console.log('VERTEX_START_MOVE', sender, evt);\r\n      // });\r\n      // 画布平移事件\r\n      this.graph.addListener(mxEvent.PAN, (sender, evt) => {\r\n        console.log('画布平移了', sender, evt);\r\n      });\r\n      // 新增节点事件\r\n      this.graph.addListener(mxEvent.ADD_CELLS, (sender, evt) => {\r\n        this.$nextTick(() => {\r\n          let addCell = evt.properties.cells[0];\r\n          if (addCell.vertex) {\r\n            // 判断是否为组节点\r\n            if (addCell.isGroup) {\r\n              this.$message.info('Added a group');\r\n              let groupObj = _.pick(addCell, ['id', 'title', 'parent', 'geometry']);\r\n              this.jsonData['cells']['groups'].push(groupObj);\r\n            } else {\r\n              let nodeObj = _.pick(addCell, ['id', 'title', 'parent', 'geometry']);\r\n              this.jsonData['cells']['nodes'].push(nodeObj);\r\n              this.$message.info('添加了一个节点');\r\n            }\r\n            //  向jsonData中更新数据\r\n          } else if (addCell.edge) {\r\n            console.log(addCell)\r\n            let lineObj = _.pick(addCell, ['id', 'edge', 'source', 'parent', 'geometry', 'value']);\r\n            this.jsonData['edges'].push(lineObj);\r\n            this.$message.info('A line was added');\r\n          }\r\n        })\r\n      });\r\n\r\n      //拖动节点的事件\r\n      this.graph.addListener(mxEvent.CELLS_MOVED, (sender, evt) => {\r\n        // console.log(this.graph, 'graph');\r\n        let cellsName = [];\r\n        this.$nextTick(() => {\r\n          evt.properties.cells.forEach(item => {\r\n            item.parent.id.includes('group') && cellsName.push(item.title);\r\n          });\r\n          evt.properties.cells[0].parent.id !== '1' && this.$message.info(`${[...cellsName]}节点进入${evt.properties.cells[0].parent.title}`);\r\n        });\r\n      });\r\n      // 删除节点触发事件\r\n      this.graph.addListener(mxEvent.CELLS_REMOVED, (sender, evt) => {\r\n        this.$nextTick(() => {\r\n          let removeCells = evt.properties.cells;\r\n          console.log(removeCells, 'removeCells')\r\n          removeCells.forEach(item => {\r\n            // 拿每一个cellId在jsonData中进行遍历,并进行移除\r\n            if (item.vertex) {\r\n              // 判断是否为组节点\r\n              if (item.isGroup) {\r\n                this.$message.info(`remove${item.id}group`);\r\n                this.jsonData['cells']['groups'].splice(this.jsonData['cells']['groups'].findIndex(jsonItem => { return jsonItem.id === item.id }), 1)\r\n              } else {\r\n                this.$message.info(`remove${item.id}node`);\r\n                this.jsonData['cells']['nodes'].splice(this.jsonData['cells']['nodes'].findIndex(jsonItem => { return jsonItem.id === item.id }), 1)\r\n              }\r\n            } else if (item.edge) {\r\n              this.$message.info('Removed line');\r\n              this.jsonData['edges'].splice(this.jsonData['edges'].findIndex(jsonItem => { return jsonItem.id === item.id }), 1)\r\n            }\r\n            // this.jsonData.forEach(item)\r\n          });\r\n        });\r\n      });\r\n\r\n    },\r\n    // 配置鼠标事件\r\n    configMouseEvent () {\r\n      this.graph.addMouseListener(\r\n        {\r\n          currentState: null,\r\n          previousStyle: null,\r\n\r\n          mouseDown: (sender, evt) => {\r\n            if (!evt.state) {\r\n              console.log('点击了画布');\r\n              return;\r\n            } else if (evt.state.cell.edge) {\r\n              console.log('点击了连线');\r\n              return;\r\n            }\r\n\r\n            const cell = evt.state.cell;\r\n            let clickNormalType = false;\r\n            if (cell.style !== undefined) {\r\n              clickNormalType = cell.style.includes('normalType');\r\n            }\r\n            if (clickNormalType) {\r\n              // 使用 mxGraph 事件中心，注册自定义事件\r\n              this.graph.fireEvent(new mxEventObject(mxEvent.NORMAL_TYPE_CLICKED, 'cell', evt));\r\n            } else {\r\n              return;\r\n            }\r\n          },\r\n\r\n          mouseMove: (sender, me) => {\r\n            // console.log('mouseMove')\r\n            this.graphX = Math.ceil(me.graphX);\r\n            this.graphY = Math.ceil(me.graphY);\r\n          },\r\n\r\n          mouseUp: (sender, evt) => {\r\n            console.log('mouseUp');\r\n            if (evt.sourceState === undefined) {\r\n              return false;\r\n            } else {\r\n              var cell = evt.sourceState.cell;\r\n              // console.log(cell);\r\n              //  var cell = this.graph.getSelectionCell();\r\n              if (cell) {\r\n                this.textValue = cell['value'] ? cell['value'] : cell['title'];\r\n                console.log(this.textValue, 'cellValue')\r\n                console.log('cellValuie', cell)\r\n                cell.vertex ? this.isNode = true : this.isNode = false;\r\n                var getcellStyle = cell.getStyle() ? cell.getStyle() : null;\r\n                if (!this.isNode) {\r\n                  // 点击的不是节点\r\n                  getcellStyle ? this.edgeStyle = getcellStyle : 'orthogonalEdgeStyle';\r\n                } else {\r\n                  // 点击的是节点\r\n                  // console.log('getcellStyle', getcellStyle);\r\n                  if (getcellStyle) {\r\n                    var arr = getcellStyle.split(';');\r\n                    // arr.pop()\r\n                    var styleObject = {};\r\n                    arr.forEach(item => {\r\n                      styleObject[item.split('=')[0]] = item.split('=')[1];\r\n                    });\r\n                    this.cellStyle = styleObject;\r\n                  }\r\n                }\r\n              } else {\r\n                this.$message.error('Please select a node or connection');\r\n              }\r\n            }\r\n          },\r\n        });\r\n    },\r\n    //配置键盘事件\r\n    configKeyEvent () {\r\n      // 启动盘事件键\r\n      this.keyHandler = new mxKeyHandler(this.graph);\r\n      // 键盘按下删除键绑定事件\r\n      this.keyHandler.bindKey(46, () => {\r\n        this.deleteNode()\r\n      });\r\n      this.keyHandler.bindControlKey(65, () => {\r\n        this.graph.selectAll();\r\n      });\r\n      this.keyHandler.bindControlKey(67, () => {\r\n        this.copy();\r\n      });\r\n      this.keyHandler.bindControlKey(88, () => {\r\n        this.cut();\r\n      });\r\n      this.keyHandler.bindControlKey(86, () => {\r\n        this.paste();\r\n      });\r\n      this.keyHandler.bindControlKey(89, () => {\r\n        this.goForward();\r\n      });\r\n      this.keyHandler.bindControlKey(90, () => {\r\n        this.goBack();\r\n      });\r\n    },\r\n    //配置右键菜单栏\r\n    configMenu () {\r\n      // 禁用浏览器默认的右键菜单栏\r\n      mxEvent.disableContextMenu(this.$refs.container);\r\n      this.graph.popupMenuHandler.factoryMethod = (menu) => {\r\n        menu.addItem('Output all nodes', null, () => {\r\n          Object.values(this.graph.getModel().cells).forEach((cell) => {\r\n            console.log(cell);\r\n          });\r\n        });\r\n\r\n        menu.addSeparator();\r\n        menu.addItem('copy', null, () => {\r\n          this.copy();\r\n        });\r\n\r\n        menu.addItem('affix', null, () => {\r\n          this.paste();\r\n        });\r\n\r\n        menu.addSeparator();\r\n        menu.addItem('assembly', null, () => {\r\n          this.enGroup();\r\n        });\r\n\r\n        menu.addItem('Salvage', null, () => {\r\n          this.graph.ungroupCells(this.graph.getSelectionCells());\r\n        });\r\n        menu.addSeparator();\r\n        menu.addItem('Flowing line', null, () => {\r\n          let cell = this.graph.getSelectionCell();\r\n          if (cell && cell.edge) {\r\n            let state = this.graph.view.getState(cell);\r\n            state.shape.node.getElementsByTagName('path')[0].removeAttribute('visibility');\r\n            state.shape.node.getElementsByTagName('path')[0].setAttribute('stroke-width', '6');\r\n            state.shape.node.getElementsByTagName('path')[0].setAttribute('stroke', 'lightGray');\r\n            state.shape.node.getElementsByTagName('path')[1].setAttribute('class', 'flow');\r\n          } else {\r\n            this.$message.error('Please select connection');\r\n          }\r\n        });\r\n        menu.addSeparator();\r\n        // menu.addItem('配置完成', null, () => {\r\n        //   let cell = this.graph.getSelectionCell().children[0];\r\n        //   let cellArrayStyle = cell.getStyle().split(';');\r\n        //   cellArrayStyle.shift();\r\n        //   let cellStyle = {};\r\n        //   cellArrayStyle.forEach(item => {\r\n        //     cellStyle[item.split('=')[0]] = item.split('=')[1];\r\n        //   });\r\n        //   let cellImage = cellStyle['image'].replace('unselect', 'selected');\r\n        //   this.graph.setCellStyles(mxConstants.STYLE_IMAGE, cellImage, [cell]);\r\n        //   this.graph.refresh(cell);\r\n        // });\r\n        menu.addItem('select all', null, () => {\r\n          this.graph.selectAll();\r\n        });\r\n        menu.addItem('Select all nodes', null, () => {\r\n          this.graph.selectCells(true, false);\r\n        });\r\n        menu.addItem('Select all connections', null, () => {\r\n          this.graph.selectCells(false, true);\r\n        });\r\n        // 分割符号\r\n        menu.addSeparator();\r\n        menu.addItem('Modify style', null, () => {\r\n          var cell = this.graph.getSelectionCell();\r\n          if (cell) {\r\n            cell.vertex ? this.isNode = true : this.isNode = false;\r\n            var getcellStyle = cell.getStyle() ? cell.getStyle() : '';\r\n            if (getcellStyle) {\r\n              var arr = getcellStyle.split(';');\r\n              //弹出最后一个空样式\r\n              // arr.pop()\r\n              var styleObject = {};\r\n              arr.forEach((item => {\r\n                styleObject[item.split('=')[0]] = item.split('=')[1];\r\n              }));\r\n              this.cellStyle = styleObject;\r\n              // if (this.isNode) {\r\n\r\n              // }\r\n            }\r\n          } else {\r\n            this.$message.error('Please select a node or connection');\r\n          }\r\n        });\r\n      };\r\n    },\r\n    //  配置全局样式\r\n    configureStylesheet (graph) {\r\n      // 设置节点的文字可被移动\r\n      graph.vertexLabelsMovable = false;\r\n      // 设置鼠标悬浮至节点或者连线时高亮显示的颜色\r\n      new mxCellTracker(graph, '#409eff');\r\n      var style = new Object();\r\n      style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_LABEL;\r\n      style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\r\n      style[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\r\n      style[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\r\n      style[mxConstants.STYLE_IMAGE_ALIGN] = mxConstants.ALIGN_CENTER;\r\n      style[mxConstants.STYLE_IMAGE_VERTICAL_ALIGN] = mxConstants.ALIGN_CENTER;\r\n      // style[mxConstants.STYLE_SPACING_TOP] = 6;\r\n      style[mxConstants.STYLE_SPACING_LEFT] = 5;\r\n      // style[mxConstants.STYLE_GRADIENTCOLOR] = 'skyblue'; // 渐变颜色\r\n      style[mxConstants.STYLE_STROKECOLOR] = '#5d65df';   // 线条颜色\r\n      style[mxConstants.STYLE_FILLCOLOR] = '#FFFFFF';\r\n      style[mxConstants.STYLE_FONTCOLOR] = '#1d258f';     // 字体颜色\r\n      style[mxConstants.STYLE_FONTFAMILY] = 'Verdana';    // 字体风格\r\n      style[mxConstants.STYLE_FONTSIZE] = '12';           // 字体大小\r\n      style[mxConstants.STYLE_FONTSTYLE] = '0';           // 斜体字\r\n      style[mxConstants.WORD_WRAP] = 'normal';             // 文字换行    word-break: break-all;\r\n      style[mxConstants['word-break']] = 'break-all';             // 文字换行\r\n      style[mxConstants.STYLE_WHITE_SPACE] = 'wrap';             // 文字换行\r\n      style[mxConstants.STYLE_ROUNDED] = false;             // 圆角\r\n      style[mxConstants.STYLE_IMAGE_WIDTH] = '28';        // 图片宽度\r\n      style[mxConstants.STYLE_IMAGE_HEIGHT] = '28';       // 图片高度\r\n      style[mxConstants.STYLE_OPACITY] = '100';            // 节点透明度(不包含字体)\r\n      graph.getStylesheet().putDefaultVertexStyle(style);\r\n\r\n      style = new Object();\r\n      style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_SWIMLANE;\r\n      style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\r\n      style[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\r\n      style[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_TOP;\r\n      style[mxConstants.STYLE_FILLCOLOR] = '#409eff';\r\n      // style[mxConstants.STYLE_GRADIENTCOLOR] = '#409eff';\r\n      style[mxConstants.STYLE_STROKECOLOR] = '#409eff';\r\n      style[mxConstants.STYLE_FONTCOLOR] = '#000000';\r\n      style[mxConstants.STYLE_ROUNDED] = false;\r\n      style[mxConstants.STYLE_OPACITY] = '80';\r\n      style[mxConstants.STYLE_STARTSIZE] = '30';\r\n      style[mxConstants.STYLE_FONTSIZE] = '16';\r\n      style[mxConstants.STYLE_FONTSTYLE] = 1;\r\n      graph.getStylesheet().putCellStyle('group', style);\r\n\r\n      style = new Object();\r\n      style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE;\r\n      style[mxConstants.STYLE_FONTCOLOR] = '#774400';\r\n      style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\r\n      style[mxConstants.STYLE_PERIMETER_SPACING] = '6';\r\n      style[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_LEFT;\r\n      style[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\r\n      style[mxConstants.STYLE_FONTSIZE] = '10';\r\n      style[mxConstants.STYLE_FONTSTYLE] = 2;\r\n      style[mxConstants.STYLE_IMAGE_WIDTH] = '16';\r\n      style[mxConstants.STYLE_IMAGE_HEIGHT] = '16';\r\n      style[mxConstants.STYLE_BACKGROUNDCOLOR] = 'transparent';\r\n      graph.getStylesheet().putCellStyle('port', style);\r\n\r\n\r\n      style = graph.getStylesheet().getDefaultEdgeStyle();\r\n      style[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR] = '#FFFFFF';\r\n      style[mxConstants.STYLE_STROKEWIDTH] = '2';\r\n      style[mxConstants.STYLE_ROUNDED] = true;\r\n      // 获取全局Edge、label样式\r\n      var edgeStyle = this.graph.getStylesheet().getDefaultEdgeStyle();\r\n      let labelStyle = this.graph.getStylesheet().getDefaultVertexStyle();\r\n      // labelStyle[mxConstants.STYLE_WHITE_SPACE] = 'wrap'; //自动换行\r\n      console.log(labelStyle, 'labelStyle')\r\n      // 设置连线风格(设置为正交折线)\r\n      edgeStyle['edgeStyle'] = 'orthogonalEdgeStyle';\r\n\r\n      // 选中 cell/edge 后的伸缩大小的点/拖动连线位置的点的颜色\r\n      // style[mxConstants.STYLE_WHITE_SPACE] = 'wrap'\r\n\r\n      mxConstants.HANDLE_FILLCOLOR = '#409eff';\r\n      mxConstants.HANDLE_STROKECOLOR = 'transparent';\r\n      mxConstants.STYLE_ANCHOR_POINT_DIRECTION = 'anchorPointDirection';\r\n      mxConstants.STYLE_STYLE_ROTATION = 'rotation';\r\n      // 是否缩放网格\r\n      mxGraphHandler.prototype.scaleGrid = true;\r\n      mxGraph.prototype.pageBreakDashed = false;\r\n\r\n      // 指定是否应使用其他单元格对齐当前所选内容的右侧，中间或左侧。默认为false。\r\n      mxGraphHandler.prototype.guidesEnabled = true;\r\n      mxGraphHandler.prototype.htmlPreview = false;\r\n      mxGraphHandler.prototype.allowLivePreview = true;\r\n      // 指定预览形状的颜色。默认为黑色。\r\n      mxGraphHandler.prototype.previewColor = \"red\"\r\n      // 应该使用实时预览的最大单元数。默认值为0，表示没有实时预览。\r\n      mxGraphHandler.prototype.maxLivePreview = 100;\r\n\r\n      // Alt 按下禁用导航线\r\n      mxGraphHandler.prototype.useGuidesForEvent = function (me) {\r\n        return !mxEvent.isAltDown(me.getEvent());\r\n      };\r\n      // 导航线颜色\r\n      mxConstants.GUIDE_COLOR = '#1a73e8';\r\n      // 导航线宽度\r\n      mxConstants.GUIDE_STROKEWIDTH = 2;\r\n      // 导航线自动连接到目标\r\n      mxEdgeHandler.prototype.snapToTerminals = true;\r\n      // 选中线条时的虚线颜色\r\n      mxConstants.EDGE_SELECTION_COLOR = '#99ccff';\r\n      // mxConstants.DEFAULT_INVALID_COLOR = 'yellow';\r\n      // mxConstants.INVALID_CONNECT_TARGET_COLOR = 'yellow';\r\n      // 连线(未满足连线要求)时预览的颜色\r\n      mxConstants.INVALID_COLOR = '#99ccff';\r\n      // 连线(满足连线要求)时预览的颜色\r\n      mxConstants.VALID_COLOR = 'blue';\r\n      // mxConstants.GUIDE_COLOR = 'yellow';\r\n      // mxConstants.LOCKED_HANDLE_FILLCOLOR = '#24bcab';\r\n      // 选中节点时选中框的颜色\r\n      mxConstants.VERTEX_SELECTION_COLOR = '#99ccff';\r\n\r\n      //折叠-/展开+图标大小\r\n      // mxGraph.prototype.collapsedImage = new mxImage('images/collapsed.gif', 15, 15);\r\n      // mxGraph.prototype.expandedImage = new mxImage('images/expanded.gif', 15, 15);\r\n\r\n      // 配置节点中心的连接图标(注釋掉即可指定錨點連接到另一個節點的錨點上)\r\n      mxConnectionHandler.prototype.connectImage = new mxImage('./icon/connectionpoint.png', 14, 14);\r\n      // 显示中心端口图标\r\n      graph.connectionHandler.targetConnectImage = false;\r\n      // 是否开启浮动自动连接\r\n      this.graph.connectionHandler.isConnectableCell = function () {\r\n        return true;\r\n      };\r\n      // 设定锚点的位置、可编辑状态和图标\r\n      mxConstraintHandler.prototype.pointImage = new mxImage('icon/dot.svg', 10, 10)\r\n      // 设置锚点上的高亮颜色\r\n      mxConstraintHandler.prototype.createHighlightShape = function () {\r\n        return new mxEllipse(null, '#409eff99', '#409eff99', 15)\r\n      }\r\n\r\n      mxShape.prototype.constraints = [\r\n        new mxConnectionConstraint(new mxPoint(0, 0), true),\r\n        new mxConnectionConstraint(new mxPoint(0.25, 0), true),\r\n        new mxConnectionConstraint(new mxPoint(0.5, 0), true),\r\n        new mxConnectionConstraint(new mxPoint(0.75, 0), true),\r\n        new mxConnectionConstraint(new mxPoint(0, 0.25), true),\r\n        new mxConnectionConstraint(new mxPoint(0, 0.5), true),\r\n        new mxConnectionConstraint(new mxPoint(0, 0.75), true),\r\n        new mxConnectionConstraint(new mxPoint(1, 0), true),\r\n        new mxConnectionConstraint(new mxPoint(1, 0.25), true),\r\n        new mxConnectionConstraint(new mxPoint(1, 0.5), true),\r\n        new mxConnectionConstraint(new mxPoint(1, 0.75), true),\r\n        new mxConnectionConstraint(new mxPoint(0, 1), true),\r\n        new mxConnectionConstraint(new mxPoint(0.25, 1), true),\r\n        new mxConnectionConstraint(new mxPoint(0.5, 1), true),\r\n        new mxConnectionConstraint(new mxPoint(0.75, 1), true),\r\n        new mxConnectionConstraint(new mxPoint(1, 1), true)];\r\n      mxPolyline.prototype.constraints = null;\r\n    },\r\n\r\n    //设置连线样式\r\n    changeDashed (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_DASHED, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    //设置线条颜色样式\r\n    changeStrokeColor (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_STROKECOLOR, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    //设置线条宽度\r\n    changeStrokeWidth (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_STROKEWIDTH, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    //设置字体大小\r\n    changeFontSize (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_FONTSIZE, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    //设置字体颜色\r\n    changeFontColor (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_FONTCOLOR, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    //设置线条说明的背景颜色\r\n    changeLabelBackgroundColor (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_LABEL_BACKGROUNDCOLOR, value, [...cell]);\r\n      // this.graph.refresh(cell)\r\n    },\r\n\r\n    changeFillColor (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_FILLCOLOR, value, [...cell]);\r\n    },\r\n\r\n    changeShadow (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_SHADOW, +(value), [...cell]);\r\n    },\r\n\r\n    changeFontStyle (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_FONTSTYLE, value, [...cell]);\r\n    },\r\n\r\n    changeNodeimage (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      this.graph.setCellStyles(mxConstants.STYLE_IMAGE, value, [...cell]);\r\n    },\r\n\r\n    // 删除节点\r\n    deleteNode () {\r\n      var cells = this.graph.getSelectionCells();\r\n      this.graph.removeCells([...cells]);\r\n    },\r\n\r\n    // 修改连线样式\r\n    edgeChange (value) {\r\n      try {\r\n        var cell = this.graph.getSelectionCells();\r\n        this.graph.setCellStyles('edgeStyle', value, [...cell]);\r\n        let style = cell[0].style;\r\n        let valStr = cell[0].value;\r\n        this.graph.removeCells(cell);\r\n        let parent = this.graph.getDefaultParent();\r\n        let v1 = '';\r\n        let v2 = '';\r\n        // 获取ID单元\r\n        parent['children'].forEach(item => {\r\n          item['id'] === cell[0].source.id ? v1 = item : false;\r\n          item['id'] === cell[0].target.id ? v2 = item : false;\r\n        });\r\n        this.graph.getModel().beginUpdate();\r\n        this.graph.insertEdge(parent, null, valStr, v1, v2, style);\r\n        this.graph.getModel().endUpdate();\r\n        this.$message.success('Succeeded in switching the connection style');\r\n      } catch (error) {\r\n        this.$message.error('Failed to switch the connection style');\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    // 修改节点文本内容\r\n    textValueChange (value) {\r\n      var cell = this.graph.getSelectionCells();\r\n      console.log(value, 'Node text new content', this.graph);\r\n      this.graph.cellLabelChanged(cell[0], value)\r\n    },\r\n    changeConfigOrder (val) {\r\n      // 获取当前的normalType元素,并更新他的title\r\n      this.currentNormalType.title = val.newConfigOrder;\r\n      // 修改指定cell的背景图片\r\n      this.graph.setCellStyles(mxConstants.STYLE_IMAGE, `./images/order/unselect-${val.newConfigOrder}.png`, [this.currentNormalType]);\r\n      this.graph.refresh(this.currentNormalType);\r\n    },\r\n\r\n    //复制\r\n    copy () {\r\n      let selectionCells = this.graph.getSelectionCells();\r\n      mxClipboard.copy(this.graph, selectionCells);\r\n    },\r\n    //粘贴\r\n    paste () {\r\n      mxClipboard.paste(this.graph);\r\n    },\r\n    //剪切\r\n    cut () {\r\n      var cells = [];\r\n      cells = this.graph.getSelectionCells();\r\n      mxClipboard.cut(this.graph, cells);\r\n    },\r\n    // 前进\r\n    goForward () {\r\n      this.undoMng.redo();\r\n    },\r\n\r\n    // 撤退\r\n    goBack () {\r\n      this.undoMng.undo();\r\n    },\r\n\r\n    // 放大\r\n    zoomIn () {\r\n      this.graph.zoomIn();\r\n    },\r\n\r\n    // 缩小\r\n    zoomOut () {\r\n      this.graph.zoomOut();\r\n    },\r\n\r\n    // 等比例缩放\r\n    autoSize () {\r\n      // 方法一\r\n      // this.editor.execute('actualSize');\r\n      //方法二：\r\n      this.graph.zoomActual();\r\n      this.graph.fit();//自适应\r\n      this.graph.center();//将画布放到容器中间\r\n    },\r\n\r\n    // 生成图片\r\n    showImage () {\r\n      this.editor.execute('show');//直接页面跳转,并以svg流程图\r\n      // 下载svg流程图\r\n      console.log('this.gtaph', this.graph)\r\n      const svg = this.exportModelSvg();\r\n      const blob = new Blob([svg], { type: 'image/svg+xml' });\r\n      const url = URL.createObjectURL(blob);\r\n      let link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = 'model.svg';\r\n      link.click();\r\n    },\r\n\r\n    exportModelSvg () {\r\n      let scale = this.graph.view.scale;\r\n      let bounds = this.graph.getGraphBounds();\r\n      let border = 10;\r\n\r\n      // Prepares SVG document that holds the output\r\n      let svgDoc = mxUtils.createXmlDocument();\r\n      let root = (svgDoc.createElementNS != null) ?\r\n        svgDoc.createElementNS(mxConstants.NS_SVG, 'svg') : svgDoc.createElement('svg');\r\n\r\n      if (root.style != null) {\r\n        root.style.backgroundColor = '#FFFFFF';\r\n      } else {\r\n        root.setAttribute('style', 'background-color:#FFFFFF');\r\n      }\r\n\r\n      if (svgDoc.createElementNS == null) {\r\n        root.setAttribute('xmlns', mxConstants.NS_SVG);\r\n      }\r\n      let width = Math.ceil(bounds.width * scale / scale + 2 * border);\r\n      let height = Math.ceil(bounds.height * scale / scale + 2 * border);\r\n      root.setAttribute('class', 'svg-container');\r\n      root.setAttribute('width', width + 'px');\r\n      root.setAttribute('height', height + 'px');\r\n      root.setAttribute('viewBox', \"0 0 \" + width + \" \" + height);\r\n      root.setAttribute('xmlns:xlink', mxConstants.NS_XLINK);\r\n      root.setAttribute('version', '1.1');\r\n\r\n      // Adds group for anti-aliasing via transform\r\n      let group = (svgDoc.createElementNS != null) ?\r\n        svgDoc.createElementNS(mxConstants.NS_SVG, 'g') : svgDoc.createElement('g');\r\n      group.setAttribute('transform', 'translate(0.5,0.5)');\r\n      root.appendChild(group);\r\n      svgDoc.appendChild(root);\r\n\r\n      // Renders graph. Offset will be multiplied with state's scale when painting state.\r\n      let svgCanvas = new mxSvgCanvas2D(group);\r\n      svgCanvas.translate(Math.floor(border / scale - bounds.x), Math.floor(border / scale - bounds.y));\r\n      svgCanvas.scale(scale);\r\n\r\n      let imgExport = new mxImageExport();\r\n      imgExport.drawState(this.graph.getView().getState(this.graph.model.root), svgCanvas);\r\n\r\n      //let xml = encodeURIComponent(mxUtils.getXml(root)); //no need\r\n      let xml = mxUtils.getXml(root);\r\n      return xml;\r\n\r\n    },\r\n    enGroup () {\r\n      this.editor.graph.setSelectionCell(this.editor.groupCells());\r\n      this.$message.success('Combination success');\r\n      // this.editor.groupCells(null, 0, this.graph.getSelectionCells());\r\n    },\r\n\r\n    // 开始导入xml文件\r\n    inPutXml () {\r\n      this.isOutputXml = false;\r\n      this.uploadDataVisible = true;\r\n      this.graphXml = '';\r\n    },\r\n\r\n    // 导入xml文件后更新视图\r\n    uploadPaintFlow (newvalue) {\r\n      this.graph.selectAll();\r\n      this.graph.removeCells(this.graph.getSelectionCells());\r\n      setTimeout(() => {\r\n        this.decode(newvalue, this.graph);\r\n        this.$message.success('Render successfully');\r\n      }, 1000);\r\n    },\r\n\r\n    createXmlDom (str) {\r\n      if (document.all) { //判断浏览器是否是IE\r\n        var xmlDom = new ActiveXObject('Microsoft.XMLDOM');\r\n        xmlDom.loadXML(str);\r\n        return xmlDom;\r\n      } else {\r\n        return (new DOMParser()).parseFromString(str, 'text/xml');\r\n      }\r\n    },\r\n\r\n    // 渲染xml流程图\r\n    decode (graphXml, graph) {\r\n      this.graph.getModel().beginUpdate();\r\n      try {\r\n        // 渲染流程图 方法一:\r\n        // const xmlDocument = mxUtils.parseXml(graphXml)\r\n        // const decoder = new mxCodec(xmlDocument)\r\n        // decoder.decode(xmlDocument.documentElement, graph.getModel())\r\n        // 渲染流程图 方法二:\r\n        var xmlDoc = this.createXmlDom(graphXml);\r\n        var node = xmlDoc.documentElement;\r\n        var dec = new mxCodec(node.ownerDocument);\r\n        dec.decode(node, graph.getModel());\r\n      } finally {\r\n        this.graph.getModel().endUpdate();\r\n        // 渲染完成调整位置\r\n        this.autoSize()\r\n      }\r\n    },\r\n\r\n    // 导出xml文件\r\n    outPutXml () {\r\n      this.isOutputXml = true;\r\n      this.uploadDataVisible = true;\r\n      this.graphXml = this.encode(this.graph);\r\n    },\r\n\r\n    // 导出xml数据\r\n    encode (graph) {\r\n      const encoder = new mxCodec();\r\n      const result = encoder.encode(graph.getModel());\r\n      return mxUtils.getPrettyXml(result);\r\n    },\r\n    //添加箭头组函数\r\n    addStencilPalette (title, name, file) {\r\n      let req = mxUtils.load(file);\r\n      let root = req.getDocumentElement();\r\n      let shape = root.firstChild;\r\n      this.$set(this.palettes, name, { title, name, shapes: [] });\r\n      while (shape != null) {\r\n        if (shape.nodeType === mxConstants.NODETYPE_ELEMENT) {\r\n          const shapeName = shape.getAttribute('name');\r\n          const h = shape.getAttribute('h');\r\n          // shape.querySelector('path').setAttribute('fill', 'transparent')\r\n          const w = shape.getAttribute('w');\r\n          mxStencilRegistry.addStencil(shapeName, new mxStencil(shape));\r\n          this.palettes[name]['shapes'].push({\r\n            name: shape.getAttribute('name'),\r\n            width: w / 2,\r\n            height: h / 2,\r\n            fill: 'transparent',\r\n          });\r\n        }\r\n        shape = shape.nextSibling;\r\n      }\r\n    },\r\n\r\n    // 初始化箭头节点组的工具栏\r\n    initStencilToolBar () {\r\n      var stencilDomArray = this.$refs.stencilDragItem;\r\n      if (!(stencilDomArray instanceof Array) || stencilDomArray.length <= 0 || (this.graph == null || this.graph == undefined)) {\r\n        return;\r\n      }\r\n      stencilDomArray.forEach(dom => {\r\n        const shapeIndex = dom.getAttribute('shapeIndex');\r\n        const paletteIndex = dom.getAttribute('paletteIndex');\r\n        const shapeItem = Object.values(this.palettes)[paletteIndex]['shapes'][shapeIndex];\r\n        const shapeWidth = shapeItem['width'];\r\n        const shapeHeight = shapeItem['height'];\r\n        const stencilDragHandler = (graph, evt, cell, x, y) => {\r\n          this.instanceGraph(this.graph, shapeItem, x, y, shapeWidth, shapeHeight, cell);\r\n        };\r\n        var createDragPreview = () => {\r\n          //设置鼠标拖拽箭头节点时的样式\r\n          const elt = document.createElement('div');\r\n          elt.style.border = '2px dotted black';\r\n          elt.style.cursor = 'pointer';\r\n          elt.style.width = `${shapeWidth}px`;\r\n          elt.style.height = `${shapeHeight}px`;\r\n          elt.style.transform = 'translate(-50%,-50%)';\r\n          return elt;\r\n        };\r\n        dom.appendChild(this.createThumb(shapeItem, shapeWidth, shapeHeight));\r\n        mxUtils.makeDraggable(dom, this.graph, stencilDragHandler, createDragPreview(), 0, 0, false, true);\r\n      });\r\n    },\r\n\r\n    // 新增箭头节点\r\n    instanceGraph (graph, shapeItem, x, y, width, height, dropCell) {\r\n      const drop = !R.isNil(dropCell);\r\n      // drop && this.$message.info(`箭头节点入${dropCell.title}`);\r\n      const realX = drop ? x - dropCell.geometry.x : x;\r\n      const realY = drop ? y - dropCell.geometry.y : y;\r\n      const parent = drop ? dropCell : graph.getDefaultParent();\r\n      graph.getModel().beginUpdate();\r\n      try {\r\n        let cell = graph.insertVertex(parent, null, null, realX - (width / 2), realY - (height / 2), width, height, `shape=${shapeItem['name']};whiteSpace=wrap;word-break=break-all;`);\r\n        cell['isGroup'] = false\r\n        cell.customer = true;\r\n      } finally {\r\n        graph.getModel().endUpdate();\r\n      }\r\n    },\r\n\r\n    // 拖拽结束时新增的箭头节点\r\n    createThumb (item, width, height) {\r\n      const tmpGraph = new mxGraph(document.createElement('div'));\r\n      const thumbBorder = 2;\r\n      tmpGraph.labelsVisible = false;\r\n      tmpGraph.view.scaleAndTranslate(1, 0, 0);\r\n      this.instanceGraph(tmpGraph, item, 0, 0, width, height);\r\n      const bounds = tmpGraph.getGraphBounds();\r\n      const s = Math.floor(Math.min((width - 2 * thumbBorder) / bounds.width, (height - 2 * thumbBorder) / bounds.height) * 100) / 100;\r\n\r\n      tmpGraph.view.scaleAndTranslate(s, Math.floor((width - bounds.width * s) / 2 / s - bounds.x), Math.floor((height - bounds.height * s) / 2 / s - bounds.y));\r\n\r\n      const node = tmpGraph.view.getCanvas().ownerSVGElement.cloneNode(true);\r\n\r\n      node.style.position = 'relative';\r\n      node.style.overflow = 'hidden';\r\n      node.style.cursor = 'pointer';\r\n      node.style.width = `${width}px`;\r\n      node.style.height = `${height}px`;\r\n      node.style.left = `${thumbBorder}px`;\r\n      node.style.top = `${thumbBorder}px`;\r\n      node.style.display = 'inline-block';\r\n      return node;\r\n    },\r\n\r\n    // 添加序号图标\r\n    addPoint (cell, number) {\r\n      const normalTypeVertex = this.graph.insertVertex(cell, null, null,\r\n        null, null, 30, 30,\r\n        `port;normalType;orderPoint=true;fillColor=none;image=./images/order/unselect-${number}.png;spacingLeft=-45px;spacingBottom=-45px`);\r\n      // 固定序号图标的位置.不随节点变大而改变位置\r\n      // normalTypeVertex.geometry.offset = new mxPoint(45, 45);\r\n      // 序号图标无法连接\r\n      // normalTypeVertex.setConnectable(false);\r\n      normalTypeVertex.id = (cell.id).split('-')[0] + `-unselect-${number}`;\r\n      normalTypeVertex.value = number;\r\n      normalTypeVertex.geometry.relative = true;\r\n      // 将新增的图标鼠标悬浮换成手势的图案\r\n      // const oldGetCursorForCell = mxGraph.prototype.getCursorForCell;\r\n      // this.graph.getCursorForCell = function (...args) {\r\n      //   const [cell] = args;\r\n      //   if (cell.edge || cell.style == undefined) {\r\n      //     return;\r\n      //   }\r\n      //   return cell.style.includes('normalType') ?\r\n      //     'pointer' :\r\n      //     oldGetCursorForCell.apply(this, args);\r\n      // };\r\n    },\r\n\r\n    // 加载案例流程图\r\n    loadFlowCase (index) {\r\n      this.$confirm('Make sure your current flowchart data is saved locally ?', 'Tips', {\r\n        confirmButtonText: 'I have saved',\r\n        cancelButtonText: 'unload',\r\n        type: 'warning',\r\n      }).then(() => {\r\n        let loadData = '';\r\n        switch (index) {\r\n          case 1:\r\n            loadData = xmlData1;\r\n            break;\r\n          case 2:\r\n            loadData = xmlData2;\r\n            break;\r\n          case 3:\r\n            loadData = xmlData3;\r\n            break;\r\n        }\r\n        console.log('loadData', loadData);\r\n        let newXml = mxUtils.load(loadData).request.response;\r\n        this.graph.selectAll();\r\n        this.graph.removeCells(this.graph.getSelectionCells());\r\n        setTimeout(() => {\r\n          this.decode(newXml, this.graph);\r\n\r\n          this.$message.success('加载流程图案例成功');\r\n        }, 1000);\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消加载流程图案例',\r\n        });\r\n      });\r\n    },\r\n    handleScroll (e) {\r\n      if (e.wheelDelta === 120) {\r\n        this.graph.zoomIn()\r\n      } else {\r\n        this.graph.zoomOut()\r\n      }\r\n    },\r\n  },\r\n  mounted () {\r\n    // 检测浏览器兼容性\r\n    if (!mxClient.isBrowserSupported()) {\r\n      this.$message.error('当前浏览器不支持拓扑图功能，请更换浏览器访问，建议使用Chrome浏览器访问!');\r\n    } else {\r\n      // Overridden to define per-shape connection points\r\n      mxGraph.prototype.getAllConnectionConstraints = function (terminal) {\r\n        if (terminal != null && terminal.shape != null) {\r\n          if (terminal.shape.stencil != null) {\r\n            if (terminal.shape.stencil.constraints != null) {\r\n              return terminal.shape.stencil.constraints;\r\n            }\r\n          } else if (terminal.shape.constraints != null) {\r\n            return terminal.shape.constraints;\r\n          }\r\n        }\r\n        return null;\r\n      };\r\n      this.createGraph();\r\n      this.eventCenter();\r\n      this.configMouseEvent();\r\n      this.configMenu();\r\n      // this.addStencilPalette('Arrow set', 'arrows', path.join('./stencil/arrows.xml'));\r\n      this.$nextTick(() => {\r\n        this.initCustomToolbar();\r\n        this.initGeneralTool();\r\n        this.initStencilToolBar();\r\n        this.makeToolbarDraggable();\r\n        this.configKeyEvent();\r\n      });\r\n    }\r\n    document.getElementById('graphContainer').addEventListener('mousewheel', this.handleScroll, true) // 监听（绑定）滚轮滚动事件\r\n  },\r\n  destroyed () {\r\n    document.getElementById('graphContainer').removeEventListener('mousewheel', this.handleScroll) //  离开页面清除（移除）滚轮滚动事件\r\n    this.graph.destroy();\r\n  },\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n@import \"./general-shap.css\";\r\n.customToolbarContainer {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  .toolbarContainer {\r\n    padding-top: 50px;\r\n    font-size: 20px;\r\n    background: #efefef;\r\n    text-align: center;\r\n    background-color: #fff;\r\n    border-right: 1px solid #ededed;\r\n    width: 10%;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    overflow-y: scroll;\r\n    .general-toolbar {\r\n      .el-collapse-item__wrap .el-collapse-item__content {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-around;\r\n        align-content: space-around;\r\n        .common {\r\n          width: 30%;\r\n          cursor: pointer;\r\n          // padding: 10px;\r\n          height: 50px;\r\n          white-space: wrap;\r\n          text-align: center;\r\n          position: relative;\r\n          .generalTooltitle {\r\n            position: absolute;\r\n            bottom: -10px;\r\n            left: 0;\r\n            width: 100%;\r\n            // transform: translateX(-50%);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .custom-toolbar {\r\n      .custom-node {\r\n        display: inline-block;\r\n        margin: 10px 0 0 0;\r\n        width: 28%;\r\n        height: 60px;\r\n        border: 1px solid #000000;\r\n        padding: 5px 0;\r\n        img {\r\n          // width: 34px;\r\n          height: 34px;\r\n        }\r\n      }\r\n      .rectangle-node {\r\n        width: 45%;\r\n        height: 40px;\r\n        margin: 10px 0 0 0;\r\n        background-color: #ffff;\r\n        position: relative;\r\n        border: 1px solid #000000;\r\n        padding: none;\r\n        img {\r\n          position: absolute;\r\n          left: 0;\r\n          // width: none;\r\n          height: 35px;\r\n          top: 50%;\r\n          transform: translateY(-50%);\r\n        }\r\n        .node-title {\r\n          position: absolute;\r\n          left: 60%;\r\n          top: 50%;\r\n          transform: translate(-50%, -50%);\r\n        }\r\n      }\r\n      .el-collapse-item__content {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-around;\r\n        align-content: space-around;\r\n        span {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .toolbarContainer::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  .graphContainer {\r\n    margin-top: 50px;\r\n    height: 100% !important;\r\n    line-height: 100%;\r\n    position: relative;\r\n    overflow: hidden;\r\n    background-color: #fff !important;\r\n    flex: 1;\r\n  }\r\n  .graphContainer-background {\r\n    background-image: url(\"../../assets/grid.gif\");\r\n  }\r\n  .top-tools {\r\n    position: absolute;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 0 20px 0 20px;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    background-color: #fff;\r\n    height: 50px;\r\n    // border-bottom: 1px solid #ededed;\r\n    box-shadow: 0px 2px 8px -4px #c4c7c1;\r\n    .select-edgetype {\r\n      width: 100px;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  .mxRubberband {\r\n    background-color: rgb(58, 58, 207);\r\n    position: absolute;\r\n  }\r\n  .el-collapse-item__header {\r\n    padding-left: 30px;\r\n  }\r\n  .right-bar {\r\n    width: 260px;\r\n    background-color: #fff;\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    border-left: 1px solid #ededed;\r\n    padding-top: 50px;\r\n    box-sizing: border-box;\r\n    .json-viewer {\r\n      overflow: auto;\r\n      position: absolute;\r\n      top: 35%;\r\n      width: 260px;\r\n      height: 70%;\r\n      bottom: 0;\r\n      right: 0;\r\n    }\r\n  }\r\n  .tools-group {\r\n    display: flex;\r\n    justify-content: center;\r\n    button {\r\n      margin-left: 22px;\r\n    }\r\n  }\r\n  .aside-button-group {\r\n    width: 100%;\r\n    position: sticky;\r\n    top: 0px;\r\n    background: #ffffff;\r\n    box-sizing: border-box;\r\n    z-index: 1000;\r\n    border: 1px solid #ededed;\r\n    border-left: none;\r\n  }\r\n}\r\n\r\ntable.mxPopupMenu {\r\n  background: #fff;\r\n  cursor: pointer;\r\n  border: 1px solid #ededed;\r\n  padding: 5px;\r\n}\r\n\r\ndiv.mxPopupMenu {\r\n  position: absolute;\r\n}\r\n.shapgroud {\r\n  .el-collapse-item__content {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  svg g path {\r\n    fill: transparent;\r\n  }\r\n  .stencil-node {\r\n    width: 20%;\r\n  }\r\n  svg g path {\r\n    stroke: #515151;\r\n    -webkit-text-fill-color: #515151;\r\n  }\r\n}\r\n\r\n.flow {\r\n  stroke-dasharray: 8;\r\n  animation: dash 0.5s linear;\r\n  animation-iteration-count: infinite;\r\n}\r\n@keyframes dash {\r\n  to {\r\n    stroke-dashoffset: -16;\r\n  }\r\n}\r\n.group-item {\r\n  cursor: pointer;\r\n  height: 40px;\r\n  margin: 5px 0;\r\n  line-height: 40px;\r\n  width: 80%;\r\n  display: inline-block;\r\n  border: 1px solid #eeee;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/customToolbar"}]}